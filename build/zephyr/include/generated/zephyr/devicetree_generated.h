/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/seatech/my-workspace/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/seatech/my-workspace/sniot_zephyr_template/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /esp32_bt_hci
 *   4   /clock
 *   5   /soc
 *   6   /soc/interrupt-controller@3ff00104
 *   7   /eth
 *   8   /mdio
 *   9   /wifi
 *   10  /soc/gpio
 *   11  /soc/gpio/gpio@3ff44000
 *   12  /buttons
 *   13  /buttons/button_0
 *   14  /cpus
 *   15  /cpus/power-states
 *   16  /cpus/power-states/deep_sleep
 *   17  /cpus/power-states/light_sleep
 *   18  /cpus/cpu@0
 *   19  /cpus/cpu@1
 *   20  /pin-controller
 *   21  /pin-controller/i2c0_default
 *   22  /pin-controller/i2c0_default/group1
 *   23  /pin-controller/i2s0_default
 *   24  /pin-controller/i2s0_default/group1
 *   25  /pin-controller/i2s1_default
 *   26  /pin-controller/i2s1_default/group1
 *   27  /pin-controller/spim2_default
 *   28  /pin-controller/spim2_default/group1
 *   29  /pin-controller/spim2_default/group2
 *   30  /pin-controller/spim3_default
 *   31  /pin-controller/spim3_default/group1
 *   32  /pin-controller/spim3_default/group2
 *   33  /pin-controller/uart0_default
 *   34  /pin-controller/uart0_default/group1
 *   35  /pin-controller/uart0_default/group2
 *   36  /pin-controller/uart1_default
 *   37  /pin-controller/uart1_default/group1
 *   38  /pin-controller/uart1_default/group2
 *   39  /pin-controller/uart2_default
 *   40  /pin-controller/uart2_default/group1
 *   41  /pin-controller/uart2_default/group2
 *   42  /soc/adc@3ff48800
 *   43  /soc/adc@3ff48890
 *   44  /soc/aes@3ff01000
 *   45  /soc/can@3ff6b000
 *   46  /soc/dac@3ff48800
 *   47  /soc/dcache0@3f400000
 *   48  /soc/i2c@3ff67000
 *   49  /soc/i2s@3ff4f000
 *   50  /soc/i2s@3ff6d000
 *   51  /soc/icache0@400d0000
 *   52  /soc/ipi@3f4c0058
 *   53  /soc/ipi@3f4c005c
 *   54  /soc/memory@3ffe5230
 *   55  /soc/ipm@3ffe9630
 *   56  /soc/ledc@3ff59000
 *   57  /soc/mbox@3ffe9638
 *   58  /soc/mcpwm@3ff5e000
 *   59  /soc/mcpwm@3ff6c000
 *   60  /soc/memory@3ffae000
 *   61  /soc/memory@3ffe0000
 *   62  /soc/memory@3ffe5630
 *   63  /soc/memory@40070000
 *   64  /soc/pcnt@3ff57000
 *   65  /soc/rtc_timer@3ff48004
 *   66  /soc/sha@3ff03000
 *   67  /soc/spi@3ff64000
 *   68  /soc/spi@3ff65000
 *   69  /soc/touch@3ff48858
 *   70  /soc/trng@3ff75144
 *   71  /soc/uart@3ff40000
 *   72  /soc/uart@3ff50000
 *   73  /soc/uart@3ff6e000
 *   74  /soc/watchdog@3ff5f048
 *   75  /soc/watchdog@3ff60048
 *   76  /soc/counter@3ff5f000
 *   77  /soc/counter@3ff5f000/counter
 *   78  /soc/counter@3ff5f024
 *   79  /soc/counter@3ff5f024/counter
 *   80  /soc/counter@3ff60000
 *   81  /soc/counter@3ff60000/counter
 *   82  /soc/counter@3ff60024
 *   83  /soc/counter@3ff60024/counter
 *   84  /soc/dcache1@3f800000
 *   85  /soc/dcache1@3f800000/psram0
 *   86  /soc/flash-controller@3ff42000
 *   87  /soc/flash-controller@3ff42000/flash@0
 *   88  /soc/flash-controller@3ff42000/flash@0/partitions
 *   89  /soc/flash-controller@3ff42000/flash@0/partitions/partition@1000
 *   90  /soc/flash-controller@3ff42000/flash@0/partitions/partition@10000
 *   91  /soc/flash-controller@3ff42000/flash@0/partitions/partition@20000
 *   92  /soc/flash-controller@3ff42000/flash@0/partitions/partition@170000
 *   93  /soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000
 *   94  /soc/flash-controller@3ff42000/flash@0/partitions/partition@330000
 *   95  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000
 *   96  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000
 *   97  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000
 *   98  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000
 *   99  /soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000
 *   100 /soc/gpio/gpio@3ff44800
 *   101 /soc/i2c@3ff53000
 *   102 /soc/i2c@3ff53000/max30102@57
 *   103 /soc/sdhc@3ff68000
 *   104 /soc/sdhc@3ff68000/sdhc@0
 *   105 /soc/sdhc@3ff68000/sdhc@1
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 11
#define DT_N_CHILD_NUM_STATUS_OKAY 9
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_eth) fn(DT_N_S_mdio) fn(DT_N_S_pin_controller) fn(DT_N_S_clock) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_eth) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mdio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_eth, __VA_ARGS__) fn(DT_N_S_mdio, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_clock, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_eth, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_mdio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_clock) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_clock, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /esp32_bt_hci */ \
	4, /* /clock */ \
	5, /* /soc */ \
	7, /* /eth */ \
	8, /* /mdio */ \
	9, /* /wifi */ \
	12, /* /buttons */ \
	14, /* /cpus */ \
	20, /* /pin-controller */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_espressif_esp32 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_espressif_esp32 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "esp32"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"espressif,esp32"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "espressif,esp32"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32
#define DT_N_P_compatible_IDX_0_STRING_TOKEN espressif_esp32
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /esp32_bt_hci
 *
 * Node identifier: DT_N_S_esp32_bt_hci
 *
 * Binding (compatible = espressif,esp32-bt-hci):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/espressif,esp32-bt-hci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_esp32_bt_hci_PATH "/esp32_bt_hci"

/* Node's name with unit-address: */
#define DT_N_S_esp32_bt_hci_FULL_NAME "esp32_bt_hci"
#define DT_N_S_esp32_bt_hci_FULL_NAME_UNQUOTED esp32_bt_hci
#define DT_N_S_esp32_bt_hci_FULL_NAME_TOKEN esp32_bt_hci
#define DT_N_S_esp32_bt_hci_FULL_NAME_UPPER_TOKEN ESP32_BT_HCI

/* Node parent (/) identifier: */
#define DT_N_S_esp32_bt_hci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_esp32_bt_hci_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_esp32_bt_hci_NODELABEL_NUM 1
#define DT_N_S_esp32_bt_hci_FOREACH_NODELABEL(fn) fn(esp32_bt_hci)
#define DT_N_S_esp32_bt_hci_FOREACH_NODELABEL_VARGS(fn, ...) fn(esp32_bt_hci, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_esp32_bt_hci_CHILD_NUM 0
#define DT_N_S_esp32_bt_hci_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_esp32_bt_hci_HASH WzQFLnWOli81_h6U7zBvNN_8VSeDs53nERgPVwn7L3U

/* Node's dependency ordinal: */
#define DT_N_S_esp32_bt_hci_ORD 3
#define DT_N_S_esp32_bt_hci_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_esp32_bt_hci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_esp32_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_esp32_bt_hci_EXISTS 1
#define DT_N_INST_0_espressif_esp32_bt_hci DT_N_S_esp32_bt_hci
#define DT_N_NODELABEL_esp32_bt_hci        DT_N_S_esp32_bt_hci

/* Macros for properties that are special in the specification: */
#define DT_N_S_esp32_bt_hci_REG_NUM 0
#define DT_N_S_esp32_bt_hci_RANGES_NUM 0
#define DT_N_S_esp32_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_esp32_bt_hci_IRQ_NUM 0
#define DT_N_S_esp32_bt_hci_IRQ_LEVEL 0
#define DT_N_S_esp32_bt_hci_COMPAT_MATCHES_espressif_esp32_bt_hci 1
#define DT_N_S_esp32_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_esp32_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_COMPAT_MODEL_IDX_0 "esp32-bt-hci"
#define DT_N_S_esp32_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_esp32_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_esp32_bt_hci_P_bt_hci_name "BT ESP32"
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_UNQUOTED BT ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_TOKEN BT_ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_UPPER_TOKEN BT_ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_IDX_0 "BT ESP32"
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus "ipc"
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_UNQUOTED ipc
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_TOKEN ipc
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_UPPER_TOKEN IPC
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0 "ipc"
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_IDX 11
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_VAL_ipc_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_ENUM_VAL_ipc_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks {"no-auto-dle"}
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_IDX 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_VAL_no_auto_dle_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_ENUM_VAL_no_auto_dle_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0 "no-auto-dle"
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_UNQUOTED no-auto-dle
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_TOKEN no_auto_dle
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_UPPER_TOKEN NO_AUTO_DLE
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_vs_ext 0
#define DT_N_S_esp32_bt_hci_P_bt_hci_vs_ext_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status "okay"
#define DT_N_S_esp32_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_esp32_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_esp32_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_esp32_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, status, 0)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, status, 0)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_status_LEN 1
#define DT_N_S_esp32_bt_hci_P_status_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_compatible {"espressif,esp32-bt-hci"}
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0 "espressif,esp32-bt-hci"
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-bt-hci
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_bt_hci
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_BT_HCI
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, compatible, 0)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, compatible, 0)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_compatible_LEN 1
#define DT_N_S_esp32_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_zephyr_deferred_init 0
#define DT_N_S_esp32_bt_hci_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_wakeup_source 0
#define DT_N_S_esp32_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_esp32_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clock
 *
 * Node identifier: DT_N_S_clock
 *
 * Binding (compatible = espressif,esp32-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/espressif,esp32-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clock_PATH "/clock"

/* Node's name with unit-address: */
#define DT_N_S_clock_FULL_NAME "clock"
#define DT_N_S_clock_FULL_NAME_UNQUOTED clock
#define DT_N_S_clock_FULL_NAME_TOKEN clock
#define DT_N_S_clock_FULL_NAME_UPPER_TOKEN CLOCK

/* Node parent (/) identifier: */
#define DT_N_S_clock_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clock_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_clock_NODELABEL_NUM 1
#define DT_N_S_clock_FOREACH_NODELABEL(fn) fn(clock)
#define DT_N_S_clock_FOREACH_NODELABEL_VARGS(fn, ...) fn(clock, __VA_ARGS__)
#define DT_N_S_clock_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clock_CHILD_NUM 0
#define DT_N_S_clock_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clock_FOREACH_CHILD(fn) 
#define DT_N_S_clock_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clock_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clock_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clock_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clock_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clock_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clock_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_clock_HASH QnKLwDxmAK_PaPqjnffzth94QNFQAD6J185NwWdLjGI

/* Node's dependency ordinal: */
#define DT_N_S_clock_ORD 4
#define DT_N_S_clock_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clock_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clock_SUPPORTS_ORDS \
	7, /* /eth */ \
	8, /* /mdio */ \
	42, /* /soc/adc@3ff48800 */ \
	43, /* /soc/adc@3ff48890 */ \
	44, /* /soc/aes@3ff01000 */ \
	45, /* /soc/can@3ff6b000 */ \
	46, /* /soc/dac@3ff48800 */ \
	48, /* /soc/i2c@3ff67000 */ \
	49, /* /soc/i2s@3ff4f000 */ \
	50, /* /soc/i2s@3ff6d000 */ \
	56, /* /soc/ledc@3ff59000 */ \
	58, /* /soc/mcpwm@3ff5e000 */ \
	59, /* /soc/mcpwm@3ff6c000 */ \
	64, /* /soc/pcnt@3ff57000 */ \
	65, /* /soc/rtc_timer@3ff48004 */ \
	66, /* /soc/sha@3ff03000 */ \
	67, /* /soc/spi@3ff64000 */ \
	68, /* /soc/spi@3ff65000 */ \
	70, /* /soc/trng@3ff75144 */ \
	71, /* /soc/uart@3ff40000 */ \
	72, /* /soc/uart@3ff50000 */ \
	73, /* /soc/uart@3ff6e000 */ \
	74, /* /soc/watchdog@3ff5f048 */ \
	75, /* /soc/watchdog@3ff60048 */ \
	76, /* /soc/counter@3ff5f000 */ \
	78, /* /soc/counter@3ff5f024 */ \
	80, /* /soc/counter@3ff60000 */ \
	82, /* /soc/counter@3ff60024 */ \
	101, /* /soc/i2c@3ff53000 */ \
	103, /* /soc/sdhc@3ff68000 */

/* Existence and alternate IDs: */
#define DT_N_S_clock_EXISTS 1
#define DT_N_INST_0_espressif_esp32_clock DT_N_S_clock
#define DT_N_NODELABEL_clock              DT_N_S_clock

/* Macros for properties that are special in the specification: */
#define DT_N_S_clock_REG_NUM 0
#define DT_N_S_clock_RANGES_NUM 0
#define DT_N_S_clock_FOREACH_RANGE(fn) 
#define DT_N_S_clock_IRQ_NUM 0
#define DT_N_S_clock_IRQ_LEVEL 0
#define DT_N_S_clock_COMPAT_MATCHES_espressif_esp32_clock 1
#define DT_N_S_clock_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clock_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_clock_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clock_COMPAT_MODEL_IDX_0 "esp32-clock"
#define DT_N_S_clock_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clock_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clock_P_fast_clk_src 1
#define DT_N_S_clock_P_fast_clk_src_IDX_0_ENUM_IDX 1
#define DT_N_S_clock_P_fast_clk_src_IDX_0_EXISTS 1
#define DT_N_S_clock_P_fast_clk_src_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_clock_P_fast_clk_src_ENUM_VAL_1_EXISTS 1
#define DT_N_S_clock_P_fast_clk_src_EXISTS 1
#define DT_N_S_clock_P_slow_clk_src 0
#define DT_N_S_clock_P_slow_clk_src_IDX_0_ENUM_IDX 0
#define DT_N_S_clock_P_slow_clk_src_IDX_0_EXISTS 1
#define DT_N_S_clock_P_slow_clk_src_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_clock_P_slow_clk_src_ENUM_VAL_0_EXISTS 1
#define DT_N_S_clock_P_slow_clk_src_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 44
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 22
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_ipm_3ffe9630) fn(DT_N_S_soc_S_mbox_3ffe9638) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_rtc_timer_3ff48004) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_uart_3ff50000) fn(DT_N_S_soc_S_uart_3ff6e000) fn(DT_N_S_soc_S_pcnt_3ff57000) fn(DT_N_S_soc_S_ledc_3ff59000) fn(DT_N_S_soc_S_mcpwm_3ff5e000) fn(DT_N_S_soc_S_mcpwm_3ff6c000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_touch_3ff48858) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_i2c_3ff67000) fn(DT_N_S_soc_S_i2s_3ff4f000) fn(DT_N_S_soc_S_i2s_3ff6d000) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_watchdog_3ff60048) fn(DT_N_S_soc_S_spi_3ff64000) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_can_3ff6b000) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc_S_counter_3ff60024) fn(DT_N_S_soc_S_dac_3ff48800) fn(DT_N_S_soc_S_adc_3ff48800) fn(DT_N_S_soc_S_adc_3ff48890) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc_S_sha_3ff03000) fn(DT_N_S_soc_S_aes_3ff01000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipm_3ffe9630) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_3ffe9638) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_3ff48004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff50000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff6e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcnt_3ff57000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_3ff59000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff5e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff6c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_touch_3ff48858) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff67000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_3ff4f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_3ff6d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff60048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff64000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_3ff6b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_3ff48800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48890) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sha_3ff03000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_3ff01000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_ipm_3ffe9630, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_3ffe9638, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff50000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff6e000, __VA_ARGS__) fn(DT_N_S_soc_S_pcnt_3ff57000, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_3ff59000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff5e000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff6c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_touch_3ff48858, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff67000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_3ff4f000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_3ff6d000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff60048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_can_3ff6b000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) fn(DT_N_S_soc_S_dac_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48890, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) fn(DT_N_S_soc_S_sha_3ff03000, __VA_ARGS__) fn(DT_N_S_soc_S_aes_3ff01000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipm_3ffe9630, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_3ffe9638, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff50000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff6e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcnt_3ff57000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_3ff59000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff5e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_3ff6c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_touch_3ff48858, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff67000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_3ff4f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_3ff6d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff60048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_3ff6b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_3ff48800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_3ff48890, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sha_3ff03000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_3ff01000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_spi_3ff64000) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc_S_sha_3ff03000) fn(DT_N_S_soc_S_aes_3ff01000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff64000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sha_3ff03000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_3ff01000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) fn(DT_N_S_soc_S_sha_3ff03000, __VA_ARGS__) fn(DT_N_S_soc_S_aes_3ff01000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sha_3ff03000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_aes_3ff01000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 5
#define DT_N_S_soc_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	10, /* /soc/gpio */ \
	42, /* /soc/adc@3ff48800 */ \
	43, /* /soc/adc@3ff48890 */ \
	44, /* /soc/aes@3ff01000 */ \
	45, /* /soc/can@3ff6b000 */ \
	46, /* /soc/dac@3ff48800 */ \
	47, /* /soc/dcache0@3f400000 */ \
	48, /* /soc/i2c@3ff67000 */ \
	49, /* /soc/i2s@3ff4f000 */ \
	50, /* /soc/i2s@3ff6d000 */ \
	51, /* /soc/icache0@400d0000 */ \
	52, /* /soc/ipi@3f4c0058 */ \
	53, /* /soc/ipi@3f4c005c */ \
	54, /* /soc/memory@3ffe5230 */ \
	55, /* /soc/ipm@3ffe9630 */ \
	56, /* /soc/ledc@3ff59000 */ \
	57, /* /soc/mbox@3ffe9638 */ \
	58, /* /soc/mcpwm@3ff5e000 */ \
	59, /* /soc/mcpwm@3ff6c000 */ \
	60, /* /soc/memory@3ffae000 */ \
	61, /* /soc/memory@3ffe0000 */ \
	62, /* /soc/memory@3ffe5630 */ \
	63, /* /soc/memory@40070000 */ \
	64, /* /soc/pcnt@3ff57000 */ \
	65, /* /soc/rtc_timer@3ff48004 */ \
	66, /* /soc/sha@3ff03000 */ \
	67, /* /soc/spi@3ff64000 */ \
	68, /* /soc/spi@3ff65000 */ \
	69, /* /soc/touch@3ff48858 */ \
	70, /* /soc/trng@3ff75144 */ \
	71, /* /soc/uart@3ff40000 */ \
	72, /* /soc/uart@3ff50000 */ \
	73, /* /soc/uart@3ff6e000 */ \
	74, /* /soc/watchdog@3ff5f048 */ \
	75, /* /soc/watchdog@3ff60048 */ \
	76, /* /soc/counter@3ff5f000 */ \
	78, /* /soc/counter@3ff5f024 */ \
	80, /* /soc/counter@3ff60000 */ \
	82, /* /soc/counter@3ff60024 */ \
	84, /* /soc/dcache1@3f800000 */ \
	86, /* /soc/flash-controller@3ff42000 */ \
	101, /* /soc/i2c@3ff53000 */ \
	103, /* /soc/sdhc@3ff68000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@3ff00104
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_3ff00104
 *
 * Binding (compatible = espressif,esp32-intc):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/espressif,esp32-intc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_PATH "/soc/interrupt-controller@3ff00104"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME "interrupt-controller@3ff00104"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME_UNQUOTED interrupt-controller@3ff00104
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME_TOKEN interrupt_controller_3ff00104
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_3FF00104

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_NODELABEL(fn) fn(intc)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_NODELABEL_VARGS(fn, ...) fn(intc, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_HASH _49jjenSCC7oKln2va4jqSXJlaOB8KkXBmMa_jEiKr4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_ORD 6
#define DT_N_S_soc_S_interrupt_controller_3ff00104_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_SUPPORTS_ORDS \
	7, /* /eth */ \
	11, /* /soc/gpio/gpio@3ff44000 */ \
	42, /* /soc/adc@3ff48800 */ \
	45, /* /soc/can@3ff6b000 */ \
	46, /* /soc/dac@3ff48800 */ \
	48, /* /soc/i2c@3ff67000 */ \
	49, /* /soc/i2s@3ff4f000 */ \
	50, /* /soc/i2s@3ff6d000 */ \
	52, /* /soc/ipi@3f4c0058 */ \
	53, /* /soc/ipi@3f4c005c */ \
	55, /* /soc/ipm@3ffe9630 */ \
	57, /* /soc/mbox@3ffe9638 */ \
	58, /* /soc/mcpwm@3ff5e000 */ \
	59, /* /soc/mcpwm@3ff6c000 */ \
	64, /* /soc/pcnt@3ff57000 */ \
	65, /* /soc/rtc_timer@3ff48004 */ \
	67, /* /soc/spi@3ff64000 */ \
	68, /* /soc/spi@3ff65000 */ \
	69, /* /soc/touch@3ff48858 */ \
	71, /* /soc/uart@3ff40000 */ \
	72, /* /soc/uart@3ff50000 */ \
	73, /* /soc/uart@3ff6e000 */ \
	74, /* /soc/watchdog@3ff5f048 */ \
	75, /* /soc/watchdog@3ff60048 */ \
	76, /* /soc/counter@3ff5f000 */ \
	78, /* /soc/counter@3ff5f024 */ \
	80, /* /soc/counter@3ff60000 */ \
	82, /* /soc/counter@3ff60024 */ \
	100, /* /soc/gpio/gpio@3ff44800 */ \
	101, /* /soc/i2c@3ff53000 */ \
	103, /* /soc/sdhc@3ff68000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_EXISTS 1
#define DT_N_INST_0_espressif_esp32_intc DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_NODELABEL_intc              DT_N_S_soc_S_interrupt_controller_3ff00104

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_IDX_0_VAL_ADDRESS 1072693508 /* 0x3ff00104 */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_REG_IDX_0_VAL_SIZE 276 /* 0x114 */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_3ff00104_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_MATCHES_espressif_esp32_intc 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_COMPAT_MODEL_IDX_0 "esp32-intc"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg {1072693508 /* 0x3ff00104 */, 276 /* 0x114 */}
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_0 1072693508
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_IDX_1 276
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status "okay"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_LEN 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_status_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible {"espressif,esp32-intc"}
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0 "espressif,esp32-intc"
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-intc
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_intc
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_INTC
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_3ff00104_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /eth
 *
 * Node identifier: DT_N_S_eth
 *
 * Binding (compatible = espressif,esp32-eth):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/espressif,esp32-eth.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_eth_PATH "/eth"

/* Node's name with unit-address: */
#define DT_N_S_eth_FULL_NAME "eth"
#define DT_N_S_eth_FULL_NAME_UNQUOTED eth
#define DT_N_S_eth_FULL_NAME_TOKEN eth
#define DT_N_S_eth_FULL_NAME_UPPER_TOKEN ETH

/* Node parent (/) identifier: */
#define DT_N_S_eth_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_eth_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_eth_NODELABEL_NUM 1
#define DT_N_S_eth_FOREACH_NODELABEL(fn) fn(eth)
#define DT_N_S_eth_FOREACH_NODELABEL_VARGS(fn, ...) fn(eth, __VA_ARGS__)
#define DT_N_S_eth_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_eth_CHILD_NUM 0
#define DT_N_S_eth_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_eth_FOREACH_CHILD(fn) 
#define DT_N_S_eth_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_eth_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_eth_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_eth_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_eth_HASH g4XfqNvxgFKetFGwX7i_IYSqWy3YWDj6sPhKb3y58g0

/* Node's dependency ordinal: */
#define DT_N_S_eth_ORD 7
#define DT_N_S_eth_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_eth_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /clock */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_eth_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_eth_EXISTS 1
#define DT_N_INST_0_espressif_esp32_eth DT_N_S_eth
#define DT_N_NODELABEL_eth              DT_N_S_eth

/* Macros for properties that are special in the specification: */
#define DT_N_S_eth_REG_NUM 0
#define DT_N_S_eth_RANGES_NUM 0
#define DT_N_S_eth_FOREACH_RANGE(fn) 
#define DT_N_S_eth_IRQ_NUM 1
#define DT_N_S_eth_IRQ_IDX_0_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_eth_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_eth_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_eth_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_eth_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_IRQ_LEVEL 1
#define DT_N_S_eth_COMPAT_MATCHES_espressif_esp32_eth 1
#define DT_N_S_eth_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_eth_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_eth_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_eth_COMPAT_MODEL_IDX_0 "esp32-eth"
#define DT_N_S_eth_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_eth_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_eth_P_zephyr_random_mac_address 0
#define DT_N_S_eth_P_zephyr_random_mac_address_EXISTS 1
#define DT_N_S_eth_P_status "disabled"
#define DT_N_S_eth_P_status_STRING_UNQUOTED disabled
#define DT_N_S_eth_P_status_STRING_TOKEN disabled
#define DT_N_S_eth_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_eth_P_status_IDX_0 "disabled"
#define DT_N_S_eth_P_status_IDX_0_EXISTS 1
#define DT_N_S_eth_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_eth_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_eth_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, status, 0)
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, status, 0)
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, status, 0, __VA_ARGS__)
#define DT_N_S_eth_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, status, 0, __VA_ARGS__)
#define DT_N_S_eth_P_status_LEN 1
#define DT_N_S_eth_P_status_EXISTS 1
#define DT_N_S_eth_P_compatible {"espressif,esp32-eth"}
#define DT_N_S_eth_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_eth_P_compatible_IDX_0 "espressif,esp32-eth"
#define DT_N_S_eth_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-eth
#define DT_N_S_eth_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_eth
#define DT_N_S_eth_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ETH
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, compatible, 0)
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, compatible, 0)
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, compatible, 0, __VA_ARGS__)
#define DT_N_S_eth_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, compatible, 0, __VA_ARGS__)
#define DT_N_S_eth_P_compatible_LEN 1
#define DT_N_S_eth_P_compatible_EXISTS 1
#define DT_N_S_eth_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_eth_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_eth_P_interrupts_IDX_0 38
#define DT_N_S_eth_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_eth_P_interrupts_IDX_1 0
#define DT_N_S_eth_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_eth_P_interrupts_IDX_2 0
#define DT_N_S_eth_P_interrupts_EXISTS 1
#define DT_N_S_eth_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_eth_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, interrupt_parent, 0)
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, interrupt_parent, 0)
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_eth_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_eth_P_interrupt_parent_LEN 1
#define DT_N_S_eth_P_interrupt_parent_EXISTS 1
#define DT_N_S_eth_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_eth_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_eth_P_clocks_IDX_0_VAL_offset 23
#define DT_N_S_eth_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_eth_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_eth, clocks, 0, offset)
#define DT_N_S_eth_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_eth, clocks, 0, offset)
#define DT_N_S_eth_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_eth, clocks, 0)
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_eth, clocks, 0)
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_eth, clocks, 0, __VA_ARGS__)
#define DT_N_S_eth_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_eth, clocks, 0, __VA_ARGS__)
#define DT_N_S_eth_P_clocks_LEN 1
#define DT_N_S_eth_P_clocks_EXISTS 1
#define DT_N_S_eth_P_zephyr_deferred_init 0
#define DT_N_S_eth_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_eth_P_wakeup_source 0
#define DT_N_S_eth_P_wakeup_source_EXISTS 1
#define DT_N_S_eth_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_eth_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /mdio
 *
 * Node identifier: DT_N_S_mdio
 *
 * Binding (compatible = espressif,esp32-mdio):
 *   $ZEPHYR_BASE/dts/bindings/mdio/espressif,esp32-mdio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_mdio_PATH "/mdio"

/* Node's name with unit-address: */
#define DT_N_S_mdio_FULL_NAME "mdio"
#define DT_N_S_mdio_FULL_NAME_UNQUOTED mdio
#define DT_N_S_mdio_FULL_NAME_TOKEN mdio
#define DT_N_S_mdio_FULL_NAME_UPPER_TOKEN MDIO

/* Node parent (/) identifier: */
#define DT_N_S_mdio_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_mdio_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_mdio_NODELABEL_NUM 1
#define DT_N_S_mdio_FOREACH_NODELABEL(fn) fn(mdio)
#define DT_N_S_mdio_FOREACH_NODELABEL_VARGS(fn, ...) fn(mdio, __VA_ARGS__)
#define DT_N_S_mdio_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_mdio_CHILD_NUM 0
#define DT_N_S_mdio_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_mdio_FOREACH_CHILD(fn) 
#define DT_N_S_mdio_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_mdio_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_mdio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_mdio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_mdio_HASH xt91oVS7cVTTxIZqe2BrdG8x0PI3kn9Sz5niPB_TkJc

/* Node's dependency ordinal: */
#define DT_N_S_mdio_ORD 8
#define DT_N_S_mdio_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_mdio_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /clock */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_mdio_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_mdio_EXISTS 1
#define DT_N_INST_0_espressif_esp32_mdio DT_N_S_mdio
#define DT_N_NODELABEL_mdio              DT_N_S_mdio

/* Macros for properties that are special in the specification: */
#define DT_N_S_mdio_REG_NUM 0
#define DT_N_S_mdio_RANGES_NUM 0
#define DT_N_S_mdio_FOREACH_RANGE(fn) 
#define DT_N_S_mdio_IRQ_NUM 0
#define DT_N_S_mdio_IRQ_LEVEL 0
#define DT_N_S_mdio_COMPAT_MATCHES_espressif_esp32_mdio 1
#define DT_N_S_mdio_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_mdio_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_mdio_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_mdio_COMPAT_MODEL_IDX_0 "esp32-mdio"
#define DT_N_S_mdio_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_mdio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_mdio_P_suppress_preamble 0
#define DT_N_S_mdio_P_suppress_preamble_EXISTS 1
#define DT_N_S_mdio_P_clock_frequency 2500000
#define DT_N_S_mdio_P_clock_frequency_EXISTS 1
#define DT_N_S_mdio_P_status "disabled"
#define DT_N_S_mdio_P_status_STRING_UNQUOTED disabled
#define DT_N_S_mdio_P_status_STRING_TOKEN disabled
#define DT_N_S_mdio_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_mdio_P_status_IDX_0 "disabled"
#define DT_N_S_mdio_P_status_IDX_0_EXISTS 1
#define DT_N_S_mdio_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_mdio_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_mdio_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mdio, status, 0)
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mdio, status, 0)
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mdio, status, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mdio, status, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_status_LEN 1
#define DT_N_S_mdio_P_status_EXISTS 1
#define DT_N_S_mdio_P_compatible {"espressif,esp32-mdio"}
#define DT_N_S_mdio_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_mdio_P_compatible_IDX_0 "espressif,esp32-mdio"
#define DT_N_S_mdio_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mdio
#define DT_N_S_mdio_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mdio
#define DT_N_S_mdio_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MDIO
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mdio, compatible, 0)
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mdio, compatible, 0)
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mdio, compatible, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mdio, compatible, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_compatible_LEN 1
#define DT_N_S_mdio_P_compatible_EXISTS 1
#define DT_N_S_mdio_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_mdio_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_mdio_P_clocks_IDX_0_VAL_offset 23
#define DT_N_S_mdio_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_mdio_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_mdio, clocks, 0, offset)
#define DT_N_S_mdio_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_mdio, clocks, 0, offset)
#define DT_N_S_mdio_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_mdio, clocks, 0)
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_mdio, clocks, 0)
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_mdio, clocks, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_mdio, clocks, 0, __VA_ARGS__)
#define DT_N_S_mdio_P_clocks_LEN 1
#define DT_N_S_mdio_P_clocks_EXISTS 1
#define DT_N_S_mdio_P_zephyr_deferred_init 0
#define DT_N_S_mdio_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_mdio_P_wakeup_source 0
#define DT_N_S_mdio_P_wakeup_source_EXISTS 1
#define DT_N_S_mdio_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_mdio_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /wifi
 *
 * Node identifier: DT_N_S_wifi
 *
 * Binding (compatible = espressif,esp32-wifi):
 *   $ZEPHYR_BASE/dts/bindings/wifi/espressif,esp32-wifi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_wifi_PATH "/wifi"

/* Node's name with unit-address: */
#define DT_N_S_wifi_FULL_NAME "wifi"
#define DT_N_S_wifi_FULL_NAME_UNQUOTED wifi
#define DT_N_S_wifi_FULL_NAME_TOKEN wifi
#define DT_N_S_wifi_FULL_NAME_UPPER_TOKEN WIFI

/* Node parent (/) identifier: */
#define DT_N_S_wifi_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_wifi_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_wifi_NODELABEL_NUM 1
#define DT_N_S_wifi_FOREACH_NODELABEL(fn) fn(wifi)
#define DT_N_S_wifi_FOREACH_NODELABEL_VARGS(fn, ...) fn(wifi, __VA_ARGS__)
#define DT_N_S_wifi_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_wifi_CHILD_NUM 0
#define DT_N_S_wifi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_wifi_FOREACH_CHILD(fn) 
#define DT_N_S_wifi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_wifi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_wifi_HASH rr0vN_kubTtnlX0gdAC83Y08AGdecB14WmkrlyFB8RE

/* Node's dependency ordinal: */
#define DT_N_S_wifi_ORD 9
#define DT_N_S_wifi_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_wifi_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_wifi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_wifi_EXISTS 1
#define DT_N_INST_0_espressif_esp32_wifi DT_N_S_wifi
#define DT_N_NODELABEL_wifi              DT_N_S_wifi

/* Macros for properties that are special in the specification: */
#define DT_N_S_wifi_REG_NUM 0
#define DT_N_S_wifi_RANGES_NUM 0
#define DT_N_S_wifi_FOREACH_RANGE(fn) 
#define DT_N_S_wifi_IRQ_NUM 0
#define DT_N_S_wifi_IRQ_LEVEL 0
#define DT_N_S_wifi_COMPAT_MATCHES_espressif_esp32_wifi 1
#define DT_N_S_wifi_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_wifi_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_wifi_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_wifi_COMPAT_MODEL_IDX_0 "esp32-wifi"
#define DT_N_S_wifi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_wifi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_wifi_P_compatible {"espressif,esp32-wifi"}
#define DT_N_S_wifi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_wifi_P_compatible_IDX_0 "espressif,esp32-wifi"
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-wifi
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_wifi
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WIFI
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_wifi, compatible, 0)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_wifi, compatible, 0)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_wifi, compatible, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_wifi, compatible, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_compatible_LEN 1
#define DT_N_S_wifi_P_compatible_EXISTS 1
#define DT_N_S_wifi_P_status "okay"
#define DT_N_S_wifi_P_status_STRING_UNQUOTED okay
#define DT_N_S_wifi_P_status_STRING_TOKEN okay
#define DT_N_S_wifi_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_wifi_P_status_IDX_0 "okay"
#define DT_N_S_wifi_P_status_IDX_0_EXISTS 1
#define DT_N_S_wifi_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_wifi_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_wifi_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_wifi, status, 0)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_wifi, status, 0)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_wifi, status, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_wifi, status, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_status_LEN 1
#define DT_N_S_wifi_P_status_EXISTS 1

/*
 * Devicetree node: /soc/gpio
 *
 * Node identifier: DT_N_S_soc_S_gpio
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_PATH "/soc/gpio"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_FULL_NAME "gpio"
#define DT_N_S_soc_S_gpio_FULL_NAME_UNQUOTED gpio
#define DT_N_S_soc_S_gpio_FULL_NAME_TOKEN gpio
#define DT_N_S_soc_S_gpio_FULL_NAME_UPPER_TOKEN GPIO

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_FOREACH_NODELABEL(fn) fn(gpio)
#define DT_N_S_soc_S_gpio_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_CHILD_NUM 2
#define DT_N_S_soc_S_gpio_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_gpio_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_gpio_HASH _Rog3Qc6JJHktlTnUGxRyVgQ8fH7dhqdBaaNvGKrX_E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_ORD 10
#define DT_N_S_soc_S_gpio_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_SUPPORTS_ORDS \
	11, /* /soc/gpio/gpio@3ff44000 */ \
	100, /* /soc/gpio/gpio@3ff44800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_EXISTS 1
#define DT_N_INST_1_simple_bus DT_N_S_soc_S_gpio
#define DT_N_NODELABEL_gpio    DT_N_S_soc_S_gpio

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_REG_NUM 0
#define DT_N_S_soc_S_gpio_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_S_gpio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_P_compatible {"simple-bus"}
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio, compatible, 0)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio, compatible, 0)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_P_ranges_EXISTS 1
#define DT_N_S_soc_S_gpio_P_status "okay"
#define DT_N_S_soc_S_gpio_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio, status, 0)
#define DT_N_S_soc_S_gpio_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio, status, 0)
#define DT_N_S_soc_S_gpio_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_status_LEN 1
#define DT_N_S_soc_S_gpio_P_status_EXISTS 1

/*
 * Devicetree node: /soc/gpio/gpio@3ff44000
 *
 * Node identifier: DT_N_S_soc_S_gpio_S_gpio_3ff44000
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_PATH "/soc/gpio/gpio@3ff44000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME "gpio@3ff44000"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME_UNQUOTED gpio@3ff44000
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME_TOKEN gpio_3ff44000
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FULL_NAME_UPPER_TOKEN GPIO_3FF44000

/* Node parent (/soc/gpio) identifier: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_PARENT DT_N_S_soc_S_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_HASH OjflC3TMG9KJnSFVd1jDqlQfb1g_qPwj3ATy0y3sO2A

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_ORD 11
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REQUIRES_ORDS \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	10, /* /soc/gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_SUPPORTS_ORDS \
	12, /* /buttons */ \
	13, /* /buttons/button_0 */ \
	101, /* /soc/i2c@3ff53000 */ \
	102, /* /soc/i2c@3ff53000/max30102@57 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_gpio DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_NODELABEL_gpio0             DT_N_S_soc_S_gpio_S_gpio_3ff44000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_IDX_0_VAL_ADDRESS 1072971776 /* 0x3ff44000 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_COMPAT_MODEL_IDX_0 "esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg {1072971776 /* 0x3ff44000 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_0 1072971776
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_ngpios 32
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges {6 /* 0x6 */, 6 /* 0x6 */, 16 /* 0x10 */, 2 /* 0x2 */, 20 /* 0x14 */, 1 /* 0x1 */, 24 /* 0x18 */, 1 /* 0x1 */, 28 /* 0x1c */, 4 /* 0x4 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_0 6
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_1 6
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_2 16
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_3 2
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_4 20
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_5 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_6 24
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_7 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_8 28
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_IDX_9 4
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 6) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 7) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 8) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 9)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 9)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 9, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, gpio_reserved_ranges, 9, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_LEN 10
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_gpio_reserved_ranges_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_GPIO
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"
#define DT_N_S_buttons_FULL_NAME_UNQUOTED buttons
#define DT_N_S_buttons_FULL_NAME_TOKEN buttons
#define DT_N_S_buttons_FULL_NAME_UPPER_TOKEN BUTTONS

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_NODELABEL_NUM 0
#define DT_N_S_buttons_FOREACH_NODELABEL(fn) 
#define DT_N_S_buttons_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_buttons_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_CHILD_NUM 1
#define DT_N_S_buttons_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_buttons_HASH 5PjIhtTrOdD7xh1YVA9zDmUgeKJd76iHjBCCBzXYfdo

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 12
#define DT_N_S_buttons_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /soc/gpio/gpio@3ff44000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	13, /* /buttons/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_IRQ_LEVEL 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_debounce_interval_ms 30
#define DT_N_S_buttons_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_buttons_P_polling_mode 0
#define DT_N_S_buttons_P_polling_mode_EXISTS 1
#define DT_N_S_buttons_P_no_disconnect 0
#define DT_N_S_buttons_P_no_disconnect_EXISTS 1
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1
#define DT_N_S_buttons_P_zephyr_deferred_init 0
#define DT_N_S_buttons_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_buttons_P_wakeup_source 0
#define DT_N_S_buttons_P_wakeup_source_EXISTS 1
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons/button_0
 *
 * Node identifier: DT_N_S_buttons_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_0_PATH "/buttons/button_0"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_0_FULL_NAME "button_0"
#define DT_N_S_buttons_S_button_0_FULL_NAME_UNQUOTED button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_TOKEN button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_UPPER_TOKEN BUTTON_0

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_0_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_button_0_NODELABEL_NUM 1
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL(fn) fn(button0)
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(button0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_buttons) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_0_CHILD_NUM 0
#define DT_N_S_buttons_S_button_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_buttons_S_button_0_HASH Dse5y6YeLZXYDvVJH_dSbYTpKqPf642pyShJZc0TmQ0

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_0_ORD 13
#define DT_N_S_buttons_S_button_0_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_0_REQUIRES_ORDS \
	11, /* /soc/gpio/gpio@3ff44000 */ \
	12, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0         DT_N_S_buttons_S_button_0
#define DT_N_NODELABEL_button0 DT_N_S_buttons_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_0_REG_NUM 0
#define DT_N_S_buttons_S_button_0_RANGES_NUM 0
#define DT_N_S_buttons_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_0_IRQ_NUM 0
#define DT_N_S_buttons_S_button_0_IRQ_LEVEL 0
#define DT_N_S_buttons_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0, pin) \
	fn(DT_N_S_buttons_S_button_0, gpios, 0, flags)
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, gpios, 0, pin) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_buttons_S_button_0, gpios, 0, flags)
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_NUM_CELLS 2
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label "BOOT Button"
#define DT_N_S_buttons_S_button_0_P_label_STRING_UNQUOTED BOOT Button
#define DT_N_S_buttons_S_button_0_P_label_STRING_TOKEN BOOT_Button
#define DT_N_S_buttons_S_button_0_P_label_STRING_UPPER_TOKEN BOOT_BUTTON
#define DT_N_S_buttons_S_button_0_P_label_IDX_0 "BOOT Button"
#define DT_N_S_buttons_S_button_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_LEN 1
#define DT_N_S_buttons_S_button_0_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_zephyr_code 11
#define DT_N_S_buttons_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 3
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 14
#define DT_N_S_cpus_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	15, /* /cpus/power-states */ \
	18, /* /cpus/cpu@0 */ \
	19, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"
#define DT_N_S_cpus_S_power_states_FULL_NAME_UNQUOTED power-states
#define DT_N_S_cpus_S_power_states_FULL_NAME_TOKEN power_states
#define DT_N_S_cpus_S_power_states_FULL_NAME_UPPER_TOKEN POWER_STATES

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_NODELABEL_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 2
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_HASH qMexuiO6C_SHOSQQCC_3by3odasm1z5VRx723zYLVgY

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 15
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	14, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	16, /* /cpus/power-states/deep_sleep */ \
	17, /* /cpus/power-states/light_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/deep_sleep
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_deep_sleep
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PATH "/cpus/power-states/deep_sleep"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME "deep_sleep"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_UNQUOTED deep_sleep
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_TOKEN deep_sleep
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_UPPER_TOKEN DEEP_SLEEP

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_NODELABEL(fn) fn(deep_sleep)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_HASH C7SKg2fWhdBJ3bgnNKxXYtXGHxBOLRajGXBHhDGlgA0

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_ORD 16
#define DT_N_S_cpus_S_power_states_S_deep_sleep_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_REQUIRES_ORDS \
	15, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_SUPPORTS_ORDS \
	18, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_NODELABEL_deep_sleep      DT_N_S_cpus_S_power_states_S_deep_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name "soft-off"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_UNQUOTED soft-off
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_TOKEN soft_off
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_UPPER_TOKEN SOFT_OFF
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0 "soft-off"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_IDX 6
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_VAL_soft_off_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_ENUM_VAL_soft_off_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_min_residency_us 2000
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_exit_latency_us 212
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/light_sleep
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_light_sleep
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PATH "/cpus/power-states/light_sleep"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME "light_sleep"
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_UNQUOTED light_sleep
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_TOKEN light_sleep
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_UPPER_TOKEN LIGHT_SLEEP

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_NODELABEL(fn) fn(light_sleep)
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(light_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_HASH trFhKUS39giGuBIU4RugUjCmoAFGXREORn8cmi85czc

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_ORD 17
#define DT_N_S_cpus_S_power_states_S_light_sleep_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_REQUIRES_ORDS \
	15, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_SUPPORTS_ORDS \
	18, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_NODELABEL_light_sleep     DT_N_S_cpus_S_power_states_S_light_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_light_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name "standby"
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_UNQUOTED standby
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_TOKEN standby
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_UPPER_TOKEN STANDBY
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0 "standby"
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_IDX 3
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_VAL_standby_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_ENUM_VAL_standby_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_min_residency_us 200
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_exit_latency_us 60
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = espressif,xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/espressif,xtensa-lx6.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 18
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	14, /* /cpus */ \
	16, /* /cpus/power-states/deep_sleep */ \
	17, /* /cpus/power-states/light_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_espressif_xtensa_lx6 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0              DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_espressif_xtensa_lx6 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "xtensa-lx6"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_source 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq 40000000
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_ENUM_IDX 0
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 240000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"espressif,xtensa-lx6"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "espressif,xtensa-lx6"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED espressif,xtensa-lx6
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN espressif_xtensa_lx6
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_XTENSA_LX6
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = espressif,xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/espressif,xtensa-lx6.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UNQUOTED cpu@1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_TOKEN cpu_1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UPPER_TOKEN CPU_1

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_1_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL(fn) fn(cpu1)
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_1_HASH 9JjWVNk3G1ibyc8ZwlqKxfoxH3N71yBfTFpYJTDe_oU

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 19
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	14, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_1_espressif_xtensa_lx6 DT_N_S_cpus_S_cpu_1
#define DT_N_NODELABEL_cpu1              DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_espressif_xtensa_lx6 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "xtensa-lx6"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_clock_source 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq 40000000
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_ENUM_IDX 0
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency 240000000
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible {"espressif,xtensa-lx6"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "espressif,xtensa-lx6"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED espressif,xtensa-lx6
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN espressif_xtensa_lx6
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_XTENSA_LX6
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = espressif,esp32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/espressif,esp32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"
#define DT_N_S_pin_controller_FULL_NAME_UNQUOTED pin-controller
#define DT_N_S_pin_controller_FULL_NAME_TOKEN pin_controller
#define DT_N_S_pin_controller_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_NODELABEL_NUM 1
#define DT_N_S_pin_controller_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pin_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_CHILD_NUM 8
#define DT_N_S_pin_controller_CHILD_NUM_STATUS_OKAY 8
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart2_default) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart2_default) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_HASH bWf59uCG_pY5hQAcoRx7FSfuctl8KNxAtmdgsI6QClA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 20
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	21, /* /pin-controller/i2c0_default */ \
	23, /* /pin-controller/i2s0_default */ \
	25, /* /pin-controller/i2s1_default */ \
	27, /* /pin-controller/spim2_default */ \
	30, /* /pin-controller/spim3_default */ \
	33, /* /pin-controller/uart0_default */ \
	36, /* /pin-controller/uart1_default */ \
	39, /* /pin-controller/uart2_default */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_espressif_esp32_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl              DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_IRQ_LEVEL 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_espressif_esp32_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "esp32-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_status "okay"
#define DT_N_S_pin_controller_P_status_STRING_UNQUOTED okay
#define DT_N_S_pin_controller_P_status_STRING_TOKEN okay
#define DT_N_S_pin_controller_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pin_controller_P_status_IDX_0 "okay"
#define DT_N_S_pin_controller_P_status_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pin_controller_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_LEN 1
#define DT_N_S_pin_controller_P_status_EXISTS 1
#define DT_N_S_pin_controller_P_compatible {"espressif,esp32-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_IDX_0 "espressif,esp32-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PINCTRL
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_deferred_init 0
#define DT_N_S_pin_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_PATH "/pin-controller/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME "i2c0_default"
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_UNQUOTED i2c0_default
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_TOKEN i2c0_default
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_UPPER_TOKEN I2C0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_NODELABEL(fn) fn(i2c0_default)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c0_default_HASH jwLAya2l1n5eq23pU58aJBqJOApGFQeY8GlS09jN_X8

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_ORD 21
#define DT_N_S_pin_controller_S_i2c0_default_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_SUPPORTS_ORDS \
	22, /* /pin-controller/i2c0_default/group1 */ \
	101, /* /soc/i2c@3ff53000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_pin_controller_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PATH "/pin-controller/i2c0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2c0_default) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_HASH _HSqkKDjPxhuu0z84CDy13StRYiLrOnhQel0xHxUxuM

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD 22
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REQUIRES_ORDS \
	21, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux {984981 /* 0xf0795 */, 952150 /* 0xe8756 */}
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0 984981
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1 952150
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_open_drain 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_high 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2s0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s0_default_PATH "/pin-controller/i2s0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME "i2s0_default"
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME_UNQUOTED i2s0_default
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME_TOKEN i2s0_default
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME_UPPER_TOKEN I2S0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2s0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s0_default_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_NODELABEL(fn) fn(i2s0_default)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s0_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s0_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2s0_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2s0_default_HASH I8KSYXqUxFC_tC8S9NNaSn5cjL9_U8rlQM6N0XTAzoU

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s0_default_ORD 23
#define DT_N_S_pin_controller_S_i2s0_default_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s0_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s0_default_SUPPORTS_ORDS \
	24, /* /pin-controller/i2s0_default/group1 */ \
	49, /* /soc/i2s@3ff4f000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s0_default_EXISTS 1
#define DT_N_NODELABEL_i2s0_default DT_N_S_pin_controller_S_i2s0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2s0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_PATH "/pin-controller/i2s0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2s0_default) identifier: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2s0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_HASH mFIVIAK6tp42PnrS9c_gzAb13xtLWBU5leaqXFwHVlI

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_ORD 24
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_REQUIRES_ORDS \
	23, /* /pin-controller/i2s0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux {820833 /* 0xc8661 */, 755168 /* 0xb85e0 */, 5373913 /* 0x51ffd9 */, 16754385 /* 0xffa6d1 */}
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_0 820833
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_1 755168
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_2 5373913
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_3 16754385
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_LEN 4
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2s1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s1_default_PATH "/pin-controller/i2s1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME "i2s1_default"
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME_UNQUOTED i2s1_default
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME_TOKEN i2s1_default
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME_UPPER_TOKEN I2S1_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2s1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s1_default_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s1_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_NODELABEL(fn) fn(i2s1_default)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s1_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2s1_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2s1_default_HASH 8x1vKoUVl6XpEqXOXwwjyASFOF_OxpeIVhshmos5kEY

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s1_default_ORD 25
#define DT_N_S_pin_controller_S_i2s1_default_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s1_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s1_default_SUPPORTS_ORDS \
	26, /* /pin-controller/i2s1_default/group1 */ \
	50, /* /soc/i2s@3ff6d000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s1_default_EXISTS 1
#define DT_N_NODELABEL_i2s1_default DT_N_S_pin_controller_S_i2s1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2s1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_PATH "/pin-controller/i2s1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2s1_default) identifier: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_PARENT DT_N_S_pin_controller_S_i2s1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_i2s1_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_HASH b8GMrpJGhPTbS89JNtW4yiEJmkozlB2psFU_LRFtwDY

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_ORD 26
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_REQUIRES_ORDS \
	25, /* /pin-controller/i2s1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux {853637 /* 0xd0685 */, 787986 /* 0xc0612 */, 6225875 /* 0x5effd3 */, 16756043 /* 0xffad4b */}
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_0 853637
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_1 787986
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_2 6225875
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_3 16756043
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_LEN 4
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim2_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spim2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim2_default_PATH "/pin-controller/spim2_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME "spim2_default"
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME_UNQUOTED spim2_default
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME_TOKEN spim2_default
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME_UPPER_TOKEN SPIM2_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spim2_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim2_default_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim2_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_NODELABEL(fn) fn(spim2_default)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spim2_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim2_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_spim2_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim2_default_HASH yQ9p_zZ49maZmOnOVWRekcc6Lo5_twi_vyjzjg0jqIA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim2_default_ORD 27
#define DT_N_S_pin_controller_S_spim2_default_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim2_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim2_default_SUPPORTS_ORDS \
	28, /* /pin-controller/spim2_default/group1 */ \
	29, /* /pin-controller/spim2_default/group2 */ \
	67, /* /soc/spi@3ff64000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim2_default_EXISTS 1
#define DT_N_NODELABEL_spim2_default DT_N_S_pin_controller_S_spim2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim2_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim2_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim2_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spim2_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spim2_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_PATH "/pin-controller/spim2_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spim2_default) identifier: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_PARENT DT_N_S_pin_controller_S_spim2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_HASH p70n6PMDj1QKr_sTZSVNVgh8FWjeQJk5mPn3eq_6lJ0

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_ORD 28
#define DT_N_S_pin_controller_S_spim2_default_S_group1_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_REQUIRES_ORDS \
	27, /* /pin-controller/spim2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux {16745036 /* 0xff824c */, 294862 /* 0x47fce */, 393167 /* 0x5ffcf */}
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_0 16745036
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_1 294862
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_2 393167
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim2_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spim2_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_PATH "/pin-controller/spim2_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/spim2_default) identifier: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_PARENT DT_N_S_pin_controller_S_spim2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_HASH 8QjmDqnyBap6vP7Vx84h2_Dt9Pvj6PnRYgLNX1RakyE

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_ORD 29
#define DT_N_S_pin_controller_S_spim2_default_S_group2_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_REQUIRES_ORDS \
	27, /* /pin-controller/spim2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux {360397 /* 0x57fcd */}
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_IDX_0 360397
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_low 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim3_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_PATH "/pin-controller/spim3_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME "spim3_default"
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_UNQUOTED spim3_default
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_TOKEN spim3_default
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_UPPER_TOKEN SPIM3_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_NODELABEL(fn) fn(spim3_default)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spim3_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_spim3_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim3_default_HASH Nj2frB1v9UxewzwdRbOJzSexWBAxllDEfZwFjTkVzHQ

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_ORD 30
#define DT_N_S_pin_controller_S_spim3_default_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_SUPPORTS_ORDS \
	31, /* /pin-controller/spim3_default/group1 */ \
	32, /* /pin-controller/spim3_default/group2 */ \
	68, /* /soc/spi@3ff65000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_EXISTS 1
#define DT_N_NODELABEL_spim3_default DT_N_S_pin_controller_S_spim3_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spim3_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PATH "/pin-controller/spim3_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spim3_default) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PARENT DT_N_S_pin_controller_S_spim3_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_HASH AqdKAUKce9do36D9v1XrdXGugpH6vKrmt_kRhqj_Ltg

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_ORD 31
#define DT_N_S_pin_controller_S_spim3_default_S_group1_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_REQUIRES_ORDS \
	30, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux {16748563 /* 0xff9013 */, 2097106 /* 0x1fffd2 */, 2260933 /* 0x227fc5 */}
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_0 16748563
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_1 2097106
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_2 2260933
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim3_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PATH "/pin-controller/spim3_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/spim3_default) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PARENT DT_N_S_pin_controller_S_spim3_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_HASH s3MzRJ1vi_Bq2UJfj__ih5Xzhc4UQC1rotuShjYEG0o

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_ORD 32
#define DT_N_S_pin_controller_S_spim3_default_S_group2_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_REQUIRES_ORDS \
	30, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux {2162647 /* 0x20ffd7 */}
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_IDX_0 2162647
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_low 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UNQUOTED uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_TOKEN uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UPPER_TOKEN UART0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL(fn) fn(uart0_default)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_HASH hpPoQq5QYEcDym1g2JBVllTKxA90m_i7KnAuJScDL4o

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 33
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	34, /* /pin-controller/uart0_default/group1 */ \
	35, /* /pin-controller/uart0_default/group2 */ \
	71, /* /soc/uart@3ff40000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_HASH mw9A94JnX0K15LdzaqSiBYHstgeiBk__IFPWTJ90zX0

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 34
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	33, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux {491457 /* 0x77fc1 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0 491457
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_high 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PATH "/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_HASH OhplDHWYl94QPNbqB4nVbAksIsz36XFx3_uS1MnAXRo

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD 35
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	33, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux {16745347 /* 0xff8383 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0 16745347
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_low 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_default_PATH "/pin-controller/uart1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_default_FULL_NAME "uart1_default"
#define DT_N_S_pin_controller_S_uart1_default_FULL_NAME_UNQUOTED uart1_default
#define DT_N_S_pin_controller_S_uart1_default_FULL_NAME_TOKEN uart1_default
#define DT_N_S_pin_controller_S_uart1_default_FULL_NAME_UPPER_TOKEN UART1_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart1_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_NODELABEL(fn) fn(uart1_default)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_uart1_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart1_default_HASH Za3R9RQFTTeTNTsukpYfmI5vvUCv8X0sGpn_TdFPSws

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_default_ORD 36
#define DT_N_S_pin_controller_S_uart1_default_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_default_SUPPORTS_ORDS \
	37, /* /pin-controller/uart1_default/group1 */ \
	38, /* /pin-controller/uart1_default/group2 */ \
	72, /* /soc/uart@3ff50000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_default_EXISTS 1
#define DT_N_NODELABEL_uart1_default DT_N_S_pin_controller_S_uart1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_PATH "/pin-controller/uart1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/uart1_default) identifier: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_PARENT DT_N_S_pin_controller_S_uart1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_HASH 4gmTcArfeyRCUqxUGGAfveDAntz196es6EtTlUsIqHU

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_ORD 37
#define DT_N_S_pin_controller_S_uart1_default_S_group1_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_REQUIRES_ORDS \
	36, /* /pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux {589770 /* 0x8ffca */}
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_IDX_0 589770
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart1_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_PATH "/pin-controller/uart1_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/uart1_default) identifier: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_PARENT DT_N_S_pin_controller_S_uart1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_HASH 6ELlh0iX_Udb9B7oGb38aHVE3rZMi1d6XkvfucuUmgw

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_ORD 38
#define DT_N_S_pin_controller_S_uart1_default_S_group2_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_REQUIRES_ORDS \
	36, /* /pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux {16745545 /* 0xff8449 */}
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_IDX_0 16745545
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_output_low 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart2_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart2_default_PATH "/pin-controller/uart2_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart2_default_FULL_NAME "uart2_default"
#define DT_N_S_pin_controller_S_uart2_default_FULL_NAME_UNQUOTED uart2_default
#define DT_N_S_pin_controller_S_uart2_default_FULL_NAME_TOKEN uart2_default
#define DT_N_S_pin_controller_S_uart2_default_FULL_NAME_UPPER_TOKEN UART2_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart2_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart2_default_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart2_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_NODELABEL(fn) fn(uart2_default)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart2_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_uart2_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart2_default_S_group1) fn(DT_N_S_pin_controller_S_uart2_default_S_group2)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart2_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default_S_group2)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart2_default_S_group1) fn(DT_N_S_pin_controller_S_uart2_default_S_group2)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart2_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default_S_group2)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart2_default_S_group2, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart2_default_HASH 43ke3RjwV6iy9itYUs8jXyKzeVvTaPF0Y1tE9I0lwaI

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart2_default_ORD 39
#define DT_N_S_pin_controller_S_uart2_default_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart2_default_REQUIRES_ORDS \
	20, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart2_default_SUPPORTS_ORDS \
	40, /* /pin-controller/uart2_default/group1 */ \
	41, /* /pin-controller/uart2_default/group2 */ \
	73, /* /soc/uart@3ff6e000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart2_default_EXISTS 1
#define DT_N_NODELABEL_uart2_default DT_N_S_pin_controller_S_uart2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart2_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart2_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart2_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart2_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart2_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_PATH "/pin-controller/uart2_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/uart2_default) identifier: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_PARENT DT_N_S_pin_controller_S_uart2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart2_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_HASH e7QPPYXQZk4WY9kvOWysKbW3YM4fH6rBDDjK69zQtjU

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_ORD 40
#define DT_N_S_pin_controller_S_uart2_default_S_group1_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_REQUIRES_ORDS \
	39, /* /pin-controller/uart2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux {6520785 /* 0x637fd1 */}
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_IDX_0 6520785
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_uart2_default_S_group1_P_output_high_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart2_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart2_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_PATH "/pin-controller/uart2_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/uart2_default) identifier: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_PARENT DT_N_S_pin_controller_S_uart2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart2_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_HASH NMX1CtrbfMtxhtMdByZw6QGscHRqscJuDzk_jjUyJZc

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_ORD 41
#define DT_N_S_pin_controller_S_uart2_default_S_group2_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_REQUIRES_ORDS \
	39, /* /pin-controller/uart2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart2_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux {16757136 /* 0xffb190 */}
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_IDX_0 16757136
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_output_low 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_uart2_default_S_group2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/adc@3ff48800
 *
 * Node identifier: DT_N_S_soc_S_adc_3ff48800
 *
 * Binding (compatible = espressif,esp32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/espressif,esp32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_3ff48800_PATH "/soc/adc@3ff48800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME "adc@3ff48800"
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME_UNQUOTED adc@3ff48800
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME_TOKEN adc_3ff48800
#define DT_N_S_soc_S_adc_3ff48800_FULL_NAME_UPPER_TOKEN ADC_3FF48800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_3ff48800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_3ff48800_CHILD_IDX 39

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_3ff48800_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_3ff48800_CHILD_NUM 0
#define DT_N_S_soc_S_adc_3ff48800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_3ff48800_HASH uCEeGqIdkprpsXanVaczu_5e6QDVsQmFhscAn9v2tcE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_3ff48800_ORD 42
#define DT_N_S_soc_S_adc_3ff48800_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_3ff48800_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_3ff48800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_3ff48800_EXISTS 1
#define DT_N_INST_0_espressif_esp32_adc DT_N_S_soc_S_adc_3ff48800
#define DT_N_NODELABEL_adc0             DT_N_S_soc_S_adc_3ff48800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_3ff48800_REG_NUM 1
#define DT_N_S_soc_S_adc_3ff48800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_REG_IDX_0_VAL_ADDRESS 1072990208 /* 0x3ff48800 */
#define DT_N_S_soc_S_adc_3ff48800_REG_IDX_0_VAL_SIZE 10 /* 0xa */
#define DT_N_S_soc_S_adc_3ff48800_RANGES_NUM 0
#define DT_N_S_soc_S_adc_3ff48800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_3ff48800_IRQ_NUM 0
#define DT_N_S_soc_S_adc_3ff48800_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_MATCHES_espressif_esp32_adc 1
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_COMPAT_MODEL_IDX_0 "esp32-adc"
#define DT_N_S_soc_S_adc_3ff48800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_3ff48800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_3ff48800_P_unit 1
#define DT_N_S_soc_S_adc_3ff48800_P_unit_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_channel_count 8
#define DT_N_S_soc_S_adc_3ff48800_P_channel_count_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_status "disabled"
#define DT_N_S_soc_S_adc_3ff48800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_3ff48800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_3ff48800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48800, status, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, status, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_status_LEN 1
#define DT_N_S_soc_S_adc_3ff48800_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_compatible {"espressif,esp32-adc"}
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0 "espressif,esp32-adc"
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-adc
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_adc
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ADC
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_3ff48800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_reg {1072990208 /* 0x3ff48800 */, 10 /* 0xa */}
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_0 1072990208
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_reg_IDX_1 10
#define DT_N_S_soc_S_adc_3ff48800_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48800, interrupt_parent, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, interrupt_parent, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_adc_3ff48800_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_VAL_offset 33
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0, offset)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0, offset)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_3ff48800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_wakeup_source 0
#define DT_N_S_soc_S_adc_3ff48800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_3ff48800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@3ff48890
 *
 * Node identifier: DT_N_S_soc_S_adc_3ff48890
 *
 * Binding (compatible = espressif,esp32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/espressif,esp32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_3ff48890_PATH "/soc/adc@3ff48890"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME "adc@3ff48890"
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME_UNQUOTED adc@3ff48890
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME_TOKEN adc_3ff48890
#define DT_N_S_soc_S_adc_3ff48890_FULL_NAME_UPPER_TOKEN ADC_3FF48890

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_3ff48890_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_3ff48890_CHILD_IDX 40

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_3ff48890_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_NODELABEL(fn) fn(adc1)
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_3ff48890_CHILD_NUM 0
#define DT_N_S_soc_S_adc_3ff48890_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_adc_3ff48890_HASH EkFfPu17owOqwpawASPJGplBeMhUN_69TYvCH8z0BWU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_3ff48890_ORD 43
#define DT_N_S_soc_S_adc_3ff48890_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_3ff48890_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_3ff48890_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_3ff48890_EXISTS 1
#define DT_N_INST_1_espressif_esp32_adc DT_N_S_soc_S_adc_3ff48890
#define DT_N_NODELABEL_adc1             DT_N_S_soc_S_adc_3ff48890

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_3ff48890_REG_NUM 1
#define DT_N_S_soc_S_adc_3ff48890_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_REG_IDX_0_VAL_ADDRESS 1072990352 /* 0x3ff48890 */
#define DT_N_S_soc_S_adc_3ff48890_REG_IDX_0_VAL_SIZE 10 /* 0xa */
#define DT_N_S_soc_S_adc_3ff48890_RANGES_NUM 0
#define DT_N_S_soc_S_adc_3ff48890_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_3ff48890_IRQ_NUM 0
#define DT_N_S_soc_S_adc_3ff48890_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_MATCHES_espressif_esp32_adc 1
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_COMPAT_MODEL_IDX_0 "esp32-adc"
#define DT_N_S_soc_S_adc_3ff48890_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_3ff48890_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_3ff48890_P_unit 2
#define DT_N_S_soc_S_adc_3ff48890_P_unit_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_channel_count 10
#define DT_N_S_soc_S_adc_3ff48890_P_channel_count_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_status "disabled"
#define DT_N_S_soc_S_adc_3ff48890_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_3ff48890_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_3ff48890_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48890, status, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48890, status, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48890, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48890, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_status_LEN 1
#define DT_N_S_soc_S_adc_3ff48890_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_compatible {"espressif,esp32-adc"}
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0 "espressif,esp32-adc"
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-adc
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_adc
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ADC
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48890, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_3ff48890_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_reg {1072990352 /* 0x3ff48890 */, 10 /* 0xa */}
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_0 1072990352
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_reg_IDX_1 10
#define DT_N_S_soc_S_adc_3ff48890_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_VAL_offset 33
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0, offset)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0, offset)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_3ff48890, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_3ff48890_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_wakeup_source 0
#define DT_N_S_soc_S_adc_3ff48890_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_3ff48890_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/aes@3ff01000
 *
 * Node identifier: DT_N_S_soc_S_aes_3ff01000
 *
 * Binding (compatible = espressif,esp32-aes):
 *   $ZEPHYR_BASE/dts/bindings/crypto/espressif,esp32-aes.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_aes_3ff01000_PATH "/soc/aes@3ff01000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_aes_3ff01000_FULL_NAME "aes@3ff01000"
#define DT_N_S_soc_S_aes_3ff01000_FULL_NAME_UNQUOTED aes@3ff01000
#define DT_N_S_soc_S_aes_3ff01000_FULL_NAME_TOKEN aes_3ff01000
#define DT_N_S_soc_S_aes_3ff01000_FULL_NAME_UPPER_TOKEN AES_3FF01000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_aes_3ff01000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_aes_3ff01000_CHILD_IDX 43

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_aes_3ff01000_NODELABEL_NUM 1
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_NODELABEL(fn) fn(aes)
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_NODELABEL_VARGS(fn, ...) fn(aes, __VA_ARGS__)
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_aes_3ff01000_CHILD_NUM 0
#define DT_N_S_soc_S_aes_3ff01000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_aes_3ff01000_HASH CMfs_n_mmomONVSYdfa_ovk_sykqPiJRsTLSyzRsTzA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_aes_3ff01000_ORD 44
#define DT_N_S_soc_S_aes_3ff01000_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_aes_3ff01000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_aes_3ff01000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_aes_3ff01000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_aes DT_N_S_soc_S_aes_3ff01000
#define DT_N_NODELABEL_aes              DT_N_S_soc_S_aes_3ff01000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_aes_3ff01000_REG_NUM 1
#define DT_N_S_soc_S_aes_3ff01000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_REG_IDX_0_VAL_ADDRESS 1072697344 /* 0x3ff01000 */
#define DT_N_S_soc_S_aes_3ff01000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_aes_3ff01000_RANGES_NUM 0
#define DT_N_S_soc_S_aes_3ff01000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_aes_3ff01000_IRQ_NUM 0
#define DT_N_S_soc_S_aes_3ff01000_IRQ_LEVEL 0
#define DT_N_S_soc_S_aes_3ff01000_COMPAT_MATCHES_espressif_esp32_aes 1
#define DT_N_S_soc_S_aes_3ff01000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_aes_3ff01000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_COMPAT_MODEL_IDX_0 "esp32-aes"
#define DT_N_S_soc_S_aes_3ff01000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_aes_3ff01000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_aes_3ff01000_P_status "okay"
#define DT_N_S_soc_S_aes_3ff01000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_aes_3ff01000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_aes_3ff01000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_aes_3ff01000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_aes_3ff01000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_aes_3ff01000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_3ff01000, status, 0)
#define DT_N_S_soc_S_aes_3ff01000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_3ff01000, status, 0)
#define DT_N_S_soc_S_aes_3ff01000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_3ff01000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_3ff01000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_3ff01000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_3ff01000_P_status_LEN 1
#define DT_N_S_soc_S_aes_3ff01000_P_status_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_compatible {"espressif,esp32-aes"}
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_IDX_0 "espressif,esp32-aes"
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-aes
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_aes
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_AES
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_3ff01000, compatible, 0)
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_3ff01000, compatible, 0)
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_3ff01000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_3ff01000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_LEN 1
#define DT_N_S_soc_S_aes_3ff01000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_reg {1072697344 /* 0x3ff01000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_aes_3ff01000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_reg_IDX_0 1072697344
#define DT_N_S_soc_S_aes_3ff01000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_aes_3ff01000_P_reg_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_IDX_0_VAL_offset 30
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_aes_3ff01000, clocks, 0, offset)
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_aes_3ff01000, clocks, 0, offset)
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_aes_3ff01000, clocks, 0)
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_aes_3ff01000, clocks, 0)
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_aes_3ff01000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_aes_3ff01000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_LEN 1
#define DT_N_S_soc_S_aes_3ff01000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_aes_3ff01000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_wakeup_source 0
#define DT_N_S_soc_S_aes_3ff01000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_aes_3ff01000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_aes_3ff01000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/can@3ff6b000
 *
 * Node identifier: DT_N_S_soc_S_can_3ff6b000
 *
 * Binding (compatible = espressif,esp32-twai):
 *   $ZEPHYR_BASE/dts/bindings/can/espressif,esp32-twai.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_3ff6b000_PATH "/soc/can@3ff6b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME "can@3ff6b000"
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME_UNQUOTED can@3ff6b000
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME_TOKEN can_3ff6b000
#define DT_N_S_soc_S_can_3ff6b000_FULL_NAME_UPPER_TOKEN CAN_3FF6B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_3ff6b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_3ff6b000_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_3ff6b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_NODELABEL(fn) fn(twai)
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(twai, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_3ff6b000_CHILD_NUM 0
#define DT_N_S_soc_S_can_3ff6b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_can_3ff6b000_HASH 8o9SMvvdm3zMQKic_Q5ffUpgfPX_QOQgHyHuASu3FMo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_3ff6b000_ORD 45
#define DT_N_S_soc_S_can_3ff6b000_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_3ff6b000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_3ff6b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_3ff6b000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_twai DT_N_S_soc_S_can_3ff6b000
#define DT_N_NODELABEL_twai              DT_N_S_soc_S_can_3ff6b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_3ff6b000_REG_NUM 1
#define DT_N_S_soc_S_can_3ff6b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_REG_IDX_0_VAL_ADDRESS 1073131520 /* 0x3ff6b000 */
#define DT_N_S_soc_S_can_3ff6b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_can_3ff6b000_RANGES_NUM 0
#define DT_N_S_soc_S_can_3ff6b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_3ff6b000_IRQ_NUM 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_MATCHES_espressif_esp32_twai 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_COMPAT_MODEL_IDX_0 "esp32-twai"
#define DT_N_S_soc_S_can_3ff6b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_3ff6b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_3ff6b000_P_reg {1073131520 /* 0x3ff6b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_0 1073131520
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_can_3ff6b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_can_3ff6b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_VAL_offset 22
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0, offset)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0, offset)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_status "disabled"
#define DT_N_S_soc_S_can_3ff6b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_3ff6b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_3ff6b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, status, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, status, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_status_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_status_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_compatible {"espressif,esp32-twai"}
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0 "espressif,esp32-twai"
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-twai
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_twai
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TWAI
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_3ff6b000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_can_3ff6b000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_wakeup_source 0
#define DT_N_S_soc_S_can_3ff6b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_3ff6b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dac@3ff48800
 *
 * Node identifier: DT_N_S_soc_S_dac_3ff48800
 *
 * Binding (compatible = espressif,esp32-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/espressif,esp32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_3ff48800_PATH "/soc/dac@3ff48800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME "dac@3ff48800"
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME_UNQUOTED dac@3ff48800
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME_TOKEN dac_3ff48800
#define DT_N_S_soc_S_dac_3ff48800_FULL_NAME_UPPER_TOKEN DAC_3FF48800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_3ff48800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_3ff48800_CHILD_IDX 38

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dac_3ff48800_NODELABEL_NUM 1
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_NODELABEL(fn) fn(dac)
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_NODELABEL_VARGS(fn, ...) fn(dac, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_3ff48800_CHILD_NUM 0
#define DT_N_S_soc_S_dac_3ff48800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dac_3ff48800_HASH tOgyO7AHESwEclEXsMOeQ7rMtYukJhPDci4HxHDoCig

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_3ff48800_ORD 46
#define DT_N_S_soc_S_dac_3ff48800_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_3ff48800_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_3ff48800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_3ff48800_EXISTS 1
#define DT_N_INST_0_espressif_esp32_dac DT_N_S_soc_S_dac_3ff48800
#define DT_N_NODELABEL_dac              DT_N_S_soc_S_dac_3ff48800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_3ff48800_REG_NUM 1
#define DT_N_S_soc_S_dac_3ff48800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_REG_IDX_0_VAL_ADDRESS 1072990208 /* 0x3ff48800 */
#define DT_N_S_soc_S_dac_3ff48800_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_dac_3ff48800_RANGES_NUM 0
#define DT_N_S_soc_S_dac_3ff48800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_3ff48800_IRQ_NUM 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_IRQ_LEVEL 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_MATCHES_espressif_esp32_dac 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_COMPAT_MODEL_IDX_0 "esp32-dac"
#define DT_N_S_soc_S_dac_3ff48800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_3ff48800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dac_3ff48800_P_status "disabled"
#define DT_N_S_soc_S_dac_3ff48800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dac_3ff48800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dac_3ff48800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, status, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, status, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_status_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_compatible {"espressif,esp32-dac"}
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0 "espressif,esp32-dac"
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-dac
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_dac
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_DAC
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_reg {1072990208 /* 0x3ff48800 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_0 1072990208
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_reg_IDX_1 256
#define DT_N_S_soc_S_dac_3ff48800_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_dac_3ff48800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_VAL_offset 33
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0, offset)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0, offset)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_3ff48800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_3ff48800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_wakeup_source 0
#define DT_N_S_soc_S_dac_3ff48800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dac_3ff48800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dcache0@3f400000
 *
 * Node identifier: DT_N_S_soc_S_dcache0_3f400000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dcache0_3f400000_PATH "/soc/dcache0@3f400000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME "dcache0@3f400000"
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME_UNQUOTED dcache0@3f400000
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME_TOKEN dcache0_3f400000
#define DT_N_S_soc_S_dcache0_3f400000_FULL_NAME_UPPER_TOKEN DCACHE0_3F400000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dcache0_3f400000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dcache0_3f400000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dcache0_3f400000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_NODELABEL(fn) fn(dcache0)
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dcache0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dcache0_3f400000_CHILD_NUM 0
#define DT_N_S_soc_S_dcache0_3f400000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dcache0_3f400000_HASH KiEHrO7y45r4Acj3iUPaq1CAxx0m_Eu1YgwqdoGMj2Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dcache0_3f400000_ORD 47
#define DT_N_S_soc_S_dcache0_3f400000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dcache0_3f400000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dcache0_3f400000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dcache0_3f400000_EXISTS 1
#define DT_N_INST_3_zephyr_memory_region DT_N_S_soc_S_dcache0_3f400000
#define DT_N_INST_3_mmio_sram            DT_N_S_soc_S_dcache0_3f400000
#define DT_N_NODELABEL_dcache0           DT_N_S_soc_S_dcache0_3f400000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dcache0_3f400000_REG_NUM 1
#define DT_N_S_soc_S_dcache0_3f400000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_REG_IDX_0_VAL_ADDRESS 1061158912 /* 0x3f400000 */
#define DT_N_S_soc_S_dcache0_3f400000_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_soc_S_dcache0_3f400000_RANGES_NUM 0
#define DT_N_S_soc_S_dcache0_3f400000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dcache0_3f400000_IRQ_NUM 0
#define DT_N_S_soc_S_dcache0_3f400000_IRQ_LEVEL 0
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_dcache0_3f400000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_dcache0_3f400000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dcache0_3f400000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region "DCACHE0"
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_STRING_UNQUOTED DCACHE0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_STRING_TOKEN DCACHE0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_STRING_UPPER_TOKEN DCACHE0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_IDX_0 "DCACHE0"
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache0_3f400000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0) \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache0_3f400000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_LEN 2
#define DT_N_S_soc_S_dcache0_3f400000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_reg {1061158912 /* 0x3f400000 */, 4194304 /* 0x400000 */}
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_0 1061158912
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_IDX_1 4194304
#define DT_N_S_soc_S_dcache0_3f400000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_wakeup_source 0
#define DT_N_S_soc_S_dcache0_3f400000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dcache0_3f400000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff67000
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff67000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff67000_PATH "/soc/i2c@3ff67000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME "i2c@3ff67000"
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME_UNQUOTED i2c@3ff67000
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME_TOKEN i2c_3ff67000
#define DT_N_S_soc_S_i2c_3ff67000_FULL_NAME_UPPER_TOKEN I2C_3FF67000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_3ff67000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff67000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff67000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_NODELABEL(fn) fn(i2c1)
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff67000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff67000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff67000_HASH __TKSOUxQ3ngZWNVMdpENS7QBX6j6z7mn_oMf98XqvU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff67000_ORD 48
#define DT_N_S_soc_S_i2c_3ff67000_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff67000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff67000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff67000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_i2c DT_N_S_soc_S_i2c_3ff67000
#define DT_N_NODELABEL_i2c1             DT_N_S_soc_S_i2c_3ff67000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff67000_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_VAL_ADDRESS 1073115136 /* 0x3ff67000 */
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_3ff67000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_MODEL_IDX_0 "esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff67000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff67000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff67000_P_reg {1073115136 /* 0x3ff67000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_0 1073115136
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_tx_lsb 0
#define DT_N_S_soc_S_i2c_3ff67000_P_tx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_rx_lsb 0
#define DT_N_S_soc_S_i2c_3ff67000_P_rx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sq_size 4
#define DT_N_S_soc_S_i2c_3ff67000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_cq_size 4
#define DT_N_S_soc_S_i2c_3ff67000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status "disabled"
#define DT_N_S_soc_S_i2c_3ff67000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_3ff67000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_3ff67000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2c
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2c
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2C
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_VAL_offset 5
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0, offset)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0, offset)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff67000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff67000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff67000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@3ff4f000
 *
 * Node identifier: DT_N_S_soc_S_i2s_3ff4f000
 *
 * Binding (compatible = espressif,esp32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/espressif,esp32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_3ff4f000_PATH "/soc/i2s@3ff4f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_3ff4f000_FULL_NAME "i2s@3ff4f000"
#define DT_N_S_soc_S_i2s_3ff4f000_FULL_NAME_UNQUOTED i2s@3ff4f000
#define DT_N_S_soc_S_i2s_3ff4f000_FULL_NAME_TOKEN i2s_3ff4f000
#define DT_N_S_soc_S_i2s_3ff4f000_FULL_NAME_UPPER_TOKEN I2S_3FF4F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_3ff4f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_3ff4f000_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2s_3ff4f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_NODELABEL(fn) fn(i2s0)
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_3ff4f000_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_3ff4f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2s_3ff4f000_HASH dXz0CRG0YX_5ccxbMh7yaHxrAhFQtZ0Zsi1IF_cF2Pk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_3ff4f000_ORD 49
#define DT_N_S_soc_S_i2s_3ff4f000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_3ff4f000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	23, /* /pin-controller/i2s0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_3ff4f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_3ff4f000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_i2s DT_N_S_soc_S_i2s_3ff4f000
#define DT_N_NODELABEL_i2s0             DT_N_S_soc_S_i2s_3ff4f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_3ff4f000_REG_NUM 1
#define DT_N_S_soc_S_i2s_3ff4f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_REG_IDX_0_VAL_ADDRESS 1073016832 /* 0x3ff4f000 */
#define DT_N_S_soc_S_i2s_3ff4f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_3ff4f000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_3ff4f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NUM 2
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_rx_VAL_irq DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_rx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_rx_VAL_priority DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_rx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_rx_VAL_flags DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_rx_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_rx_CONTROLLER DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_tx_VAL_flags DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_tx_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_IRQ_NAME_tx_CONTROLLER DT_N_S_soc_S_i2s_3ff4f000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2s_3ff4f000_COMPAT_MATCHES_espressif_esp32_i2s 1
#define DT_N_S_soc_S_i2s_3ff4f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2s_3ff4f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_COMPAT_MODEL_IDX_0 "esp32-i2s"
#define DT_N_S_soc_S_i2s_3ff4f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_3ff4f000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2s_3ff4f000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2s_3ff4f000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_3ff4f000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2s_3ff4f000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2s0_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_3ff4f000_P_reg {1073016832 /* 0x3ff4f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_3ff4f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_reg_IDX_0 1073016832
#define DT_N_S_soc_S_i2s_3ff4f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_3ff4f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2s0_default
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2s0_default
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_IDX_0_VAL_offset 6
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, clocks, 0, offset)
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, clocks, 0, offset)
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, clocks, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, clocks, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts {32 /* 0x20 */, 0 /* 0x0 */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_3 32
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_unit 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_unit_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_status "disabled"
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, status, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, status, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible {"espressif,esp32-i2s"}
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_IDX_0 "espressif,esp32-i2s"
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2s
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2s
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2S
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, compatible, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, compatible, 0)
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names {"rx", "tx"}
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_0 "rx"
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_1 "tx"
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 1)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 1)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_3ff4f000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2s_3ff4f000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff4f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_3ff4f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@3ff6d000
 *
 * Node identifier: DT_N_S_soc_S_i2s_3ff6d000
 *
 * Binding (compatible = espressif,esp32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/espressif,esp32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_3ff6d000_PATH "/soc/i2s@3ff6d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_3ff6d000_FULL_NAME "i2s@3ff6d000"
#define DT_N_S_soc_S_i2s_3ff6d000_FULL_NAME_UNQUOTED i2s@3ff6d000
#define DT_N_S_soc_S_i2s_3ff6d000_FULL_NAME_TOKEN i2s_3ff6d000
#define DT_N_S_soc_S_i2s_3ff6d000_FULL_NAME_UPPER_TOKEN I2S_3FF6D000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_3ff6d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_3ff6d000_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2s_3ff6d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_NODELABEL(fn) fn(i2s1)
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_3ff6d000_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_3ff6d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2s_3ff6d000_HASH olA1rhxpUdxEgqspmNtsa5BlBCDgNDcGik_x8lwu0kM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_3ff6d000_ORD 50
#define DT_N_S_soc_S_i2s_3ff6d000_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_3ff6d000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	25, /* /pin-controller/i2s1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_3ff6d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_3ff6d000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_i2s DT_N_S_soc_S_i2s_3ff6d000
#define DT_N_NODELABEL_i2s1             DT_N_S_soc_S_i2s_3ff6d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_3ff6d000_REG_NUM 1
#define DT_N_S_soc_S_i2s_3ff6d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_REG_IDX_0_VAL_ADDRESS 1073139712 /* 0x3ff6d000 */
#define DT_N_S_soc_S_i2s_3ff6d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_3ff6d000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_3ff6d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NUM 2
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_irq 33
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_rx_VAL_irq DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_rx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_rx_VAL_priority DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_rx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_rx_VAL_flags DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_VAL_flags
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_rx_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_rx_CONTROLLER DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_tx_VAL_flags DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_VAL_flags
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_tx_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_IRQ_NAME_tx_CONTROLLER DT_N_S_soc_S_i2s_3ff6d000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2s_3ff6d000_COMPAT_MATCHES_espressif_esp32_i2s 1
#define DT_N_S_soc_S_i2s_3ff6d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2s_3ff6d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_COMPAT_MODEL_IDX_0 "esp32-i2s"
#define DT_N_S_soc_S_i2s_3ff6d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_3ff6d000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2s_3ff6d000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2s_3ff6d000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_3ff6d000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2s_3ff6d000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2s1_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_3ff6d000_P_reg {1073139712 /* 0x3ff6d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_3ff6d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_reg_IDX_0 1073139712
#define DT_N_S_soc_S_i2s_3ff6d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_3ff6d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2s1_default
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2s1_default
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_IDX_0_VAL_offset 7
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, clocks, 0, offset)
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, clocks, 0, offset)
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, clocks, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, clocks, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 0 /* 0x0 */, 33 /* 0x21 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_3 33
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_unit 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_unit_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_status "disabled"
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, status, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, status, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible {"espressif,esp32-i2s"}
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_IDX_0 "espressif,esp32-i2s"
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2s
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2s
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2S
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, compatible, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, compatible, 0)
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names {"rx", "tx"}
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_0 "rx"
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_1 "tx"
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 1)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 1)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_3ff6d000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2s_3ff6d000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_3ff6d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_3ff6d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_3ff6d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_3ff6d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/icache0@400d0000
 *
 * Node identifier: DT_N_S_soc_S_icache0_400d0000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_icache0_400d0000_PATH "/soc/icache0@400d0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME "icache0@400d0000"
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME_UNQUOTED icache0@400d0000
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME_TOKEN icache0_400d0000
#define DT_N_S_soc_S_icache0_400d0000_FULL_NAME_UPPER_TOKEN ICACHE0_400D0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_icache0_400d0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_icache0_400d0000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_icache0_400d0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_NODELABEL(fn) fn(icache0)
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(icache0, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_icache0_400d0000_CHILD_NUM 0
#define DT_N_S_soc_S_icache0_400d0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_icache0_400d0000_HASH KbgZ02XllewOGn8Am2YD0zZE7vmNQk3qtg5Hb8p_c2o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_icache0_400d0000_ORD 51
#define DT_N_S_soc_S_icache0_400d0000_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_icache0_400d0000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_icache0_400d0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_icache0_400d0000_EXISTS 1
#define DT_N_INST_5_zephyr_memory_region DT_N_S_soc_S_icache0_400d0000
#define DT_N_INST_5_mmio_sram            DT_N_S_soc_S_icache0_400d0000
#define DT_N_NODELABEL_icache0           DT_N_S_soc_S_icache0_400d0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_icache0_400d0000_REG_NUM 1
#define DT_N_S_soc_S_icache0_400d0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_REG_IDX_0_VAL_ADDRESS 1074593792 /* 0x400d0000 */
#define DT_N_S_soc_S_icache0_400d0000_REG_IDX_0_VAL_SIZE 11730944 /* 0xb30000 */
#define DT_N_S_soc_S_icache0_400d0000_RANGES_NUM 0
#define DT_N_S_soc_S_icache0_400d0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_icache0_400d0000_IRQ_NUM 0
#define DT_N_S_soc_S_icache0_400d0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_icache0_400d0000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_icache0_400d0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_icache0_400d0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region "ICACHE0"
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_STRING_UNQUOTED ICACHE0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_STRING_TOKEN ICACHE0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_STRING_UPPER_TOKEN ICACHE0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_IDX_0 "ICACHE0"
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_icache0_400d0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0) \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_icache0_400d0000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_icache0_400d0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_LEN 2
#define DT_N_S_soc_S_icache0_400d0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_reg {1074593792 /* 0x400d0000 */, 11730944 /* 0xb30000 */}
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_0 1074593792
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_reg_IDX_1 11730944
#define DT_N_S_soc_S_icache0_400d0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_wakeup_source 0
#define DT_N_S_soc_S_icache0_400d0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_icache0_400d0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ipi@3f4c0058
 *
 * Node identifier: DT_N_S_soc_S_ipi_3f4c0058
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipi_3f4c0058_PATH "/soc/ipi@3f4c0058"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME "ipi@3f4c0058"
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME_UNQUOTED ipi@3f4c0058
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME_TOKEN ipi_3f4c0058
#define DT_N_S_soc_S_ipi_3f4c0058_FULL_NAME_UPPER_TOKEN IPI_3F4C0058

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipi_3f4c0058_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ipi_3f4c0058_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ipi_3f4c0058_NODELABEL_NUM 1
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_NODELABEL(fn) fn(ipi0)
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipi0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ipi_3f4c0058_CHILD_NUM 0
#define DT_N_S_soc_S_ipi_3f4c0058_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ipi_3f4c0058_HASH Updud6Bn_I5smcFMtNZhVMRMvG3YjLb7kUgv7M_zWpE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipi_3f4c0058_ORD 52
#define DT_N_S_soc_S_ipi_3f4c0058_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipi_3f4c0058_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipi_3f4c0058_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipi_3f4c0058_EXISTS 1
#define DT_N_INST_0_espressif_crosscore_interrupt DT_N_S_soc_S_ipi_3f4c0058
#define DT_N_NODELABEL_ipi0                       DT_N_S_soc_S_ipi_3f4c0058

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ipi_3f4c0058_REG_NUM 1
#define DT_N_S_soc_S_ipi_3f4c0058_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_REG_IDX_0_VAL_ADDRESS 1061945432 /* 0x3f4c0058 */
#define DT_N_S_soc_S_ipi_3f4c0058_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_ipi_3f4c0058_RANGES_NUM 0
#define DT_N_S_soc_S_ipi_3f4c0058_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_NUM 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipi_3f4c0058_IRQ_LEVEL 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_MATCHES_espressif_crosscore_interrupt 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_COMPAT_MODEL_IDX_0 "crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c0058_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ipi_3f4c0058_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible {"espressif,crosscore-interrupt"}
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0 "espressif,crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_STRING_UNQUOTED espressif,crosscore-interrupt
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_STRING_TOKEN espressif_crosscore_interrupt
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_CROSSCORE_INTERRUPT
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipi_3f4c0058, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_LEN 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg {1061945432 /* 0x3f4c0058 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_0 1061945432
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_IDX_1 4
#define DT_N_S_soc_S_ipi_3f4c0058_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_ipi_3f4c0058_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/ipi@3f4c005c
 *
 * Node identifier: DT_N_S_soc_S_ipi_3f4c005c
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipi_3f4c005c_PATH "/soc/ipi@3f4c005c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME "ipi@3f4c005c"
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME_UNQUOTED ipi@3f4c005c
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME_TOKEN ipi_3f4c005c
#define DT_N_S_soc_S_ipi_3f4c005c_FULL_NAME_UPPER_TOKEN IPI_3F4C005C

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipi_3f4c005c_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ipi_3f4c005c_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ipi_3f4c005c_NODELABEL_NUM 1
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_NODELABEL(fn) fn(ipi1)
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipi1, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ipi_3f4c005c_CHILD_NUM 0
#define DT_N_S_soc_S_ipi_3f4c005c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ipi_3f4c005c_HASH 1IdHnAAC51281r6Nxt3Ml4IfemUe60n6A9GFEKGlM3A

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipi_3f4c005c_ORD 53
#define DT_N_S_soc_S_ipi_3f4c005c_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipi_3f4c005c_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipi_3f4c005c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipi_3f4c005c_EXISTS 1
#define DT_N_INST_1_espressif_crosscore_interrupt DT_N_S_soc_S_ipi_3f4c005c
#define DT_N_NODELABEL_ipi1                       DT_N_S_soc_S_ipi_3f4c005c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ipi_3f4c005c_REG_NUM 1
#define DT_N_S_soc_S_ipi_3f4c005c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_REG_IDX_0_VAL_ADDRESS 1061945436 /* 0x3f4c005c */
#define DT_N_S_soc_S_ipi_3f4c005c_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_ipi_3f4c005c_RANGES_NUM 0
#define DT_N_S_soc_S_ipi_3f4c005c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_NUM 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipi_3f4c005c_IRQ_LEVEL 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_MATCHES_espressif_crosscore_interrupt 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_COMPAT_MODEL_IDX_0 "crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c005c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ipi_3f4c005c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible {"espressif,crosscore-interrupt"}
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0 "espressif,crosscore-interrupt"
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_STRING_UNQUOTED espressif,crosscore-interrupt
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_STRING_TOKEN espressif_crosscore_interrupt
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_CROSSCORE_INTERRUPT
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipi_3f4c005c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_LEN 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg {1061945436 /* 0x3f4c005c */, 4 /* 0x4 */}
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_0 1061945436
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_IDX_1 4
#define DT_N_S_soc_S_ipi_3f4c005c_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_ipi_3f4c005c_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffe5230
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffe5230
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffe5230_PATH "/soc/memory@3ffe5230"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME "memory@3ffe5230"
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME_UNQUOTED memory@3ffe5230
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME_TOKEN memory_3ffe5230
#define DT_N_S_soc_S_memory_3ffe5230_FULL_NAME_UPPER_TOKEN MEMORY_3FFE5230

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffe5230_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffe5230_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffe5230_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_NODELABEL(fn) fn(ipmmem0)
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipmmem0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffe5230_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffe5230_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffe5230_HASH S_C7VBw_RT1OEZlAefTCJmPkq6pGRwwdA41wjJC_3oQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffe5230_ORD 54
#define DT_N_S_soc_S_memory_3ffe5230_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffe5230_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffe5230_SUPPORTS_ORDS \
	55, /* /soc/ipm@3ffe9630 */ \
	57, /* /soc/mbox@3ffe9638 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffe5230_EXISTS 1
#define DT_N_INST_6_mmio_sram  DT_N_S_soc_S_memory_3ffe5230
#define DT_N_NODELABEL_ipmmem0 DT_N_S_soc_S_memory_3ffe5230

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffe5230_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffe5230_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_REG_IDX_0_VAL_ADDRESS 1073631792 /* 0x3ffe5230 */
#define DT_N_S_soc_S_memory_3ffe5230_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_memory_3ffe5230_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffe5230_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffe5230_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffe5230_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffe5230_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffe5230_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffe5230_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffe5230_P_reg {1073631792 /* 0x3ffe5230 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_0 1073631792
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_IDX_1 1024
#define DT_N_S_soc_S_memory_3ffe5230_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe5230, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_3ffe5230_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffe5230_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffe5230_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ipm@3ffe9630
 *
 * Node identifier: DT_N_S_soc_S_ipm_3ffe9630
 *
 * Binding (compatible = espressif,esp32-ipm):
 *   $ZEPHYR_BASE/dts/bindings/ipm/espressif,esp32-ipm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipm_3ffe9630_PATH "/soc/ipm@3ffe9630"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME "ipm@3ffe9630"
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME_UNQUOTED ipm@3ffe9630
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME_TOKEN ipm_3ffe9630
#define DT_N_S_soc_S_ipm_3ffe9630_FULL_NAME_UPPER_TOKEN IPM_3FFE9630

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipm_3ffe9630_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ipm_3ffe9630_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ipm_3ffe9630_NODELABEL_NUM 1
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_NODELABEL(fn) fn(ipm0)
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipm0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ipm_3ffe9630_CHILD_NUM 0
#define DT_N_S_soc_S_ipm_3ffe9630_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ipm_3ffe9630_HASH 2WNsp7ONtsCK_mpB1IjzgX64m51c7s3XFQj6rAWKMCY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipm_3ffe9630_ORD 55
#define DT_N_S_soc_S_ipm_3ffe9630_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipm_3ffe9630_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	54, /* /soc/memory@3ffe5230 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipm_3ffe9630_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipm_3ffe9630_EXISTS 1
#define DT_N_INST_0_espressif_esp32_ipm DT_N_S_soc_S_ipm_3ffe9630
#define DT_N_NODELABEL_ipm0             DT_N_S_soc_S_ipm_3ffe9630

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ipm_3ffe9630_REG_NUM 1
#define DT_N_S_soc_S_ipm_3ffe9630_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_REG_IDX_0_VAL_ADDRESS 1073649200 /* 0x3ffe9630 */
#define DT_N_S_soc_S_ipm_3ffe9630_REG_IDX_0_VAL_SIZE 8 /* 0x8 */
#define DT_N_S_soc_S_ipm_3ffe9630_RANGES_NUM 0
#define DT_N_S_soc_S_ipm_3ffe9630_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_NUM 2
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_IRQ_LEVEL 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_MATCHES_espressif_esp32_ipm 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_COMPAT_MODEL_IDX_0 "esp32-ipm"
#define DT_N_S_soc_S_ipm_3ffe9630_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ipm_3ffe9630_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg {1073649200 /* 0x3ffe9630 */, 8 /* 0x8 */}
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_0 1073649200
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_IDX_1 8
#define DT_N_S_soc_S_ipm_3ffe9630_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_IDX_0 DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_IDX_0_PH DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_size 1024
#define DT_N_S_soc_S_ipm_3ffe9630_P_shared_memory_size_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_3 25
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status "disabled"
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_status_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible {"espressif,esp32-ipm"}
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0 "espressif,esp32-ipm"
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-ipm
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_ipm
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_IPM
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3ffe9630, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_wakeup_source 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ipm_3ffe9630_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ledc@3ff59000
 *
 * Node identifier: DT_N_S_soc_S_ledc_3ff59000
 *
 * Binding (compatible = espressif,esp32-ledc):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-ledc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ledc_3ff59000_PATH "/soc/ledc@3ff59000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME "ledc@3ff59000"
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME_UNQUOTED ledc@3ff59000
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME_TOKEN ledc_3ff59000
#define DT_N_S_soc_S_ledc_3ff59000_FULL_NAME_UPPER_TOKEN LEDC_3FF59000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ledc_3ff59000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ledc_3ff59000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ledc_3ff59000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_NODELABEL(fn) fn(ledc0)
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ledc0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ledc_3ff59000_CHILD_NUM 0
#define DT_N_S_soc_S_ledc_3ff59000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ledc_3ff59000_HASH _sQMT8zvfqrjZvMqOu4kifo_69KcjgqqRgrz1HS56so

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ledc_3ff59000_ORD 56
#define DT_N_S_soc_S_ledc_3ff59000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ledc_3ff59000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ledc_3ff59000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ledc_3ff59000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_ledc DT_N_S_soc_S_ledc_3ff59000
#define DT_N_NODELABEL_ledc0             DT_N_S_soc_S_ledc_3ff59000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ledc_3ff59000_REG_NUM 1
#define DT_N_S_soc_S_ledc_3ff59000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_REG_IDX_0_VAL_ADDRESS 1073057792 /* 0x3ff59000 */
#define DT_N_S_soc_S_ledc_3ff59000_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_ledc_3ff59000_RANGES_NUM 0
#define DT_N_S_soc_S_ledc_3ff59000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ledc_3ff59000_IRQ_NUM 0
#define DT_N_S_soc_S_ledc_3ff59000_IRQ_LEVEL 0
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_MATCHES_espressif_esp32_ledc 1
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_COMPAT_MODEL_IDX_0 "esp32-ledc"
#define DT_N_S_soc_S_ledc_3ff59000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ledc_3ff59000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ledc_3ff59000_P_status "disabled"
#define DT_N_S_soc_S_ledc_3ff59000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_ledc_3ff59000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ledc_3ff59000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_3ff59000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_status_LEN 1
#define DT_N_S_soc_S_ledc_3ff59000_P_status_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible {"espressif,esp32-ledc"}
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0 "espressif,esp32-ledc"
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-ledc
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_ledc
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_LEDC
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_3ff59000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_LEN 1
#define DT_N_S_soc_S_ledc_3ff59000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_reg {1073057792 /* 0x3ff59000 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_0 1073057792
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_IDX_1 2048
#define DT_N_S_soc_S_ledc_3ff59000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0, offset)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0, offset)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_3ff59000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_LEN 1
#define DT_N_S_soc_S_ledc_3ff59000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_wakeup_source 0
#define DT_N_S_soc_S_ledc_3ff59000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ledc_3ff59000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mbox@3ffe9638
 *
 * Node identifier: DT_N_S_soc_S_mbox_3ffe9638
 *
 * Binding (compatible = espressif,mbox-esp32):
 *   $ZEPHYR_BASE/dts/bindings/mbox/espressif,mbox-esp32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mbox_3ffe9638_PATH "/soc/mbox@3ffe9638"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME "mbox@3ffe9638"
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME_UNQUOTED mbox@3ffe9638
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME_TOKEN mbox_3ffe9638
#define DT_N_S_soc_S_mbox_3ffe9638_FULL_NAME_UPPER_TOKEN MBOX_3FFE9638

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mbox_3ffe9638_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mbox_3ffe9638_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mbox_3ffe9638_NODELABEL_NUM 1
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_NODELABEL(fn) fn(mbox0)
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_NODELABEL_VARGS(fn, ...) fn(mbox0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mbox_3ffe9638_CHILD_NUM 0
#define DT_N_S_soc_S_mbox_3ffe9638_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mbox_3ffe9638_HASH OHFNnCn0k8KUyPKRvimkiO7IHIye2_Y5bZ_cK2WgNTE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mbox_3ffe9638_ORD 57
#define DT_N_S_soc_S_mbox_3ffe9638_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mbox_3ffe9638_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	54, /* /soc/memory@3ffe5230 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mbox_3ffe9638_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mbox_3ffe9638_EXISTS 1
#define DT_N_INST_0_espressif_mbox_esp32 DT_N_S_soc_S_mbox_3ffe9638
#define DT_N_NODELABEL_mbox0             DT_N_S_soc_S_mbox_3ffe9638

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mbox_3ffe9638_REG_NUM 1
#define DT_N_S_soc_S_mbox_3ffe9638_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_REG_IDX_0_VAL_ADDRESS 1073649208 /* 0x3ffe9638 */
#define DT_N_S_soc_S_mbox_3ffe9638_REG_IDX_0_VAL_SIZE 8 /* 0x8 */
#define DT_N_S_soc_S_mbox_3ffe9638_RANGES_NUM 0
#define DT_N_S_soc_S_mbox_3ffe9638_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_NUM 2
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_IRQ_LEVEL 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_MATCHES_espressif_mbox_esp32 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_COMPAT_MODEL_IDX_0 "mbox-esp32"
#define DT_N_S_soc_S_mbox_3ffe9638_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mbox_3ffe9638_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg {1073649208 /* 0x3ffe9638 */, 8 /* 0x8 */}
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_0 1073649208
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_IDX_1 8
#define DT_N_S_soc_S_mbox_3ffe9638_P_reg_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_IDX_0 DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_IDX_0_PH DT_N_S_soc_S_memory_3ffe5230
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_size 1024
#define DT_N_S_soc_S_mbox_3ffe9638_P_shared_memory_size_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_3 25
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status "disabled"
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_status_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible {"espressif,mbox-esp32"}
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0 "espressif,mbox-esp32"
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_STRING_UNQUOTED espressif,mbox-esp32
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_STRING_TOKEN espressif_mbox_esp32
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_MBOX_ESP32
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3ffe9638, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_wakeup_source 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mbox_3ffe9638_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mcpwm@3ff5e000
 *
 * Node identifier: DT_N_S_soc_S_mcpwm_3ff5e000
 *
 * Binding (compatible = espressif,esp32-mcpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-mcpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_PATH "/soc/mcpwm@3ff5e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME "mcpwm@3ff5e000"
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME_UNQUOTED mcpwm@3ff5e000
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME_TOKEN mcpwm_3ff5e000
#define DT_N_S_soc_S_mcpwm_3ff5e000_FULL_NAME_UPPER_TOKEN MCPWM_3FF5E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_NODELABEL(fn) fn(mcpwm0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcpwm0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mcpwm_3ff5e000_CHILD_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_HASH fvjkluJ0H_8C338CMCPviUNWzf2gvA3JnTFGOsKDdLQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_ORD 58
#define DT_N_S_soc_S_mcpwm_3ff5e000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_mcpwm DT_N_S_soc_S_mcpwm_3ff5e000
#define DT_N_NODELABEL_mcpwm0             DT_N_S_soc_S_mcpwm_3ff5e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_IDX_0_VAL_ADDRESS 1073078272 /* 0x3ff5e000 */
#define DT_N_S_soc_S_mcpwm_3ff5e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mcpwm_3ff5e000_RANGES_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_MATCHES_espressif_esp32_mcpwm 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_COMPAT_MODEL_IDX_0 "esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff5e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status "disabled"
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_status_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible {"espressif,esp32-mcpwm"}
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0 "espressif,esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mcpwm
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mcpwm
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MCPWM
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg {1073078272 /* 0x3ff5e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_0 1073078272
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_VAL_offset 10
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0, offset)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0, offset)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff5e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_wakeup_source 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mcpwm_3ff5e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mcpwm@3ff6c000
 *
 * Node identifier: DT_N_S_soc_S_mcpwm_3ff6c000
 *
 * Binding (compatible = espressif,esp32-mcpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-mcpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_PATH "/soc/mcpwm@3ff6c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME "mcpwm@3ff6c000"
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME_UNQUOTED mcpwm@3ff6c000
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME_TOKEN mcpwm_3ff6c000
#define DT_N_S_soc_S_mcpwm_3ff6c000_FULL_NAME_UPPER_TOKEN MCPWM_3FF6C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_NODELABEL(fn) fn(mcpwm1)
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcpwm1, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mcpwm_3ff6c000_CHILD_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_HASH jDncI2_KKgjFidiwT1hafPAlfYYng9h1WJdFgiqPDZI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_ORD 59
#define DT_N_S_soc_S_mcpwm_3ff6c000_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_mcpwm DT_N_S_soc_S_mcpwm_3ff6c000
#define DT_N_NODELABEL_mcpwm1             DT_N_S_soc_S_mcpwm_3ff6c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_IDX_0_VAL_ADDRESS 1073135616 /* 0x3ff6c000 */
#define DT_N_S_soc_S_mcpwm_3ff6c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mcpwm_3ff6c000_RANGES_NUM 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_NUM 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_MATCHES_espressif_esp32_mcpwm 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_COMPAT_MODEL_IDX_0 "esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff6c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status "disabled"
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_status_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible {"espressif,esp32-mcpwm"}
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0 "espressif,esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mcpwm
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mcpwm
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MCPWM
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg {1073135616 /* 0x3ff6c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_0 1073135616
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts {40 /* 0x28 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_VAL_offset 11
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0, offset)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0, offset)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_3ff6c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_LEN 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_wakeup_source 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mcpwm_3ff6c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffae000
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffae000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffae000_PATH "/soc/memory@3ffae000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME "memory@3ffae000"
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME_UNQUOTED memory@3ffae000
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME_TOKEN memory_3ffae000
#define DT_N_S_soc_S_memory_3ffae000_FULL_NAME_UPPER_TOKEN MEMORY_3FFAE000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffae000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffae000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffae000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_NODELABEL(fn) fn(sram2)
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram2, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffae000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffae000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffae000_HASH V4G0BGzn_vjHulfdqM_oT7nNNpSXbUwAIRqFDJ51K_M

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffae000_ORD 60
#define DT_N_S_soc_S_memory_3ffae000_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffae000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffae000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffae000_EXISTS 1
#define DT_N_INST_2_zephyr_memory_region DT_N_S_soc_S_memory_3ffae000
#define DT_N_INST_2_mmio_sram            DT_N_S_soc_S_memory_3ffae000
#define DT_N_NODELABEL_sram2             DT_N_S_soc_S_memory_3ffae000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffae000_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffae000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_REG_IDX_0_VAL_ADDRESS 1073405952 /* 0x3ffae000 */
#define DT_N_S_soc_S_memory_3ffae000_REG_IDX_0_VAL_SIZE 204800 /* 0x32000 */
#define DT_N_S_soc_S_memory_3ffae000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffae000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffae000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffae000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_3ffae000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffae000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffae000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region "SRAM2"
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_STRING_UNQUOTED SRAM2
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_STRING_TOKEN SRAM2
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM2
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_IDX_0 "SRAM2"
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffae000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffae000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffae000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_3ffae000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_reg {1073405952 /* 0x3ffae000 */, 204800 /* 0x32000 */}
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_0 1073405952
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_reg_IDX_1 204800
#define DT_N_S_soc_S_memory_3ffae000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffae000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffae000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffe0000
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffe0000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffe0000_PATH "/soc/memory@3ffe0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME "memory@3ffe0000"
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME_UNQUOTED memory@3ffe0000
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME_TOKEN memory_3ffe0000
#define DT_N_S_soc_S_memory_3ffe0000_FULL_NAME_UPPER_TOKEN MEMORY_3FFE0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffe0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffe0000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffe0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_NODELABEL(fn) fn(sram1)
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffe0000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffe0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffe0000_HASH OIgUjRVrI0NhaM7yCr_oMsCHIRwmJg7_RBUoQqZ9ef4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffe0000_ORD 61
#define DT_N_S_soc_S_memory_3ffe0000_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffe0000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffe0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffe0000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_soc_S_memory_3ffe0000
#define DT_N_INST_1_mmio_sram            DT_N_S_soc_S_memory_3ffe0000
#define DT_N_NODELABEL_sram1             DT_N_S_soc_S_memory_3ffe0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffe0000_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffe0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_REG_IDX_0_VAL_ADDRESS 1073610752 /* 0x3ffe0000 */
#define DT_N_S_soc_S_memory_3ffe0000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_memory_3ffe0000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffe0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffe0000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffe0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_3ffe0000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffe0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffe0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region "SRAM1"
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_STRING_UNQUOTED SRAM1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_STRING_TOKEN SRAM1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_IDX_0 "SRAM1"
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe0000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_3ffe0000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_3ffe0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_reg {1073610752 /* 0x3ffe0000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_0 1073610752
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_memory_3ffe0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffe0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffe0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@3ffe5630
 *
 * Node identifier: DT_N_S_soc_S_memory_3ffe5630
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3ffe5630_PATH "/soc/memory@3ffe5630"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME "memory@3ffe5630"
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME_UNQUOTED memory@3ffe5630
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME_TOKEN memory_3ffe5630
#define DT_N_S_soc_S_memory_3ffe5630_FULL_NAME_UPPER_TOKEN MEMORY_3FFE5630

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3ffe5630_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3ffe5630_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3ffe5630_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_NODELABEL(fn) fn(shm0)
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_NODELABEL_VARGS(fn, ...) fn(shm0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3ffe5630_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3ffe5630_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_3ffe5630_HASH TUZ1Vqduw_Qc97R5KaP_TYrGCNHRtbp46dNPmk2pJsA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3ffe5630_ORD 62
#define DT_N_S_soc_S_memory_3ffe5630_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3ffe5630_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3ffe5630_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3ffe5630_EXISTS 1
#define DT_N_INST_7_mmio_sram DT_N_S_soc_S_memory_3ffe5630
#define DT_N_NODELABEL_shm0   DT_N_S_soc_S_memory_3ffe5630

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3ffe5630_REG_NUM 1
#define DT_N_S_soc_S_memory_3ffe5630_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_REG_IDX_0_VAL_ADDRESS 1073632816 /* 0x3ffe5630 */
#define DT_N_S_soc_S_memory_3ffe5630_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_memory_3ffe5630_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3ffe5630_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3ffe5630_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3ffe5630_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3ffe5630_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3ffe5630_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3ffe5630_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3ffe5630_P_reg {1073632816 /* 0x3ffe5630 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_0 1073632816
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_IDX_1 16384
#define DT_N_S_soc_S_memory_3ffe5630_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3ffe5630, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_3ffe5630_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3ffe5630_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3ffe5630_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@40070000
 *
 * Node identifier: DT_N_S_soc_S_memory_40070000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_40070000_PATH "/soc/memory@40070000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_40070000_FULL_NAME "memory@40070000"
#define DT_N_S_soc_S_memory_40070000_FULL_NAME_UNQUOTED memory@40070000
#define DT_N_S_soc_S_memory_40070000_FULL_NAME_TOKEN memory_40070000
#define DT_N_S_soc_S_memory_40070000_FULL_NAME_UPPER_TOKEN MEMORY_40070000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_40070000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_40070000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_40070000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_40070000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_40070000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_40070000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_40070000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40070000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_40070000_HASH 4Sc_NpCjOPZUFHIWedeDH_nq8o0deyZgzz8q6jRHZKM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_40070000_ORD 63
#define DT_N_S_soc_S_memory_40070000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_40070000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_40070000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_40070000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_soc_S_memory_40070000
#define DT_N_INST_0_mmio_sram            DT_N_S_soc_S_memory_40070000
#define DT_N_NODELABEL_sram0             DT_N_S_soc_S_memory_40070000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_40070000_REG_NUM 1
#define DT_N_S_soc_S_memory_40070000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_REG_IDX_0_VAL_ADDRESS 1074200576 /* 0x40070000 */
#define DT_N_S_soc_S_memory_40070000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_soc_S_memory_40070000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_40070000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_40070000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_40070000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_40070000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_40070000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_memory_40070000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_40070000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_40070000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_40070000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region "SRAM0"
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_STRING_UNQUOTED SRAM0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_STRING_TOKEN SRAM0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_IDX_0 "SRAM0"
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_40070000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40070000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1)
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_40070000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1)
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40070000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_40070000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_40070000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40070000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_40070000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_reg {1074200576 /* 0x40070000 */, 196608 /* 0x30000 */}
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_0 1074200576
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_reg_IDX_1 196608
#define DT_N_S_soc_S_memory_40070000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_40070000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_40070000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_40070000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pcnt@3ff57000
 *
 * Node identifier: DT_N_S_soc_S_pcnt_3ff57000
 *
 * Binding (compatible = espressif,esp32-pcnt):
 *   $ZEPHYR_BASE/dts/bindings/sensor/espressif,esp32-pcnt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pcnt_3ff57000_PATH "/soc/pcnt@3ff57000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME "pcnt@3ff57000"
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME_UNQUOTED pcnt@3ff57000
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME_TOKEN pcnt_3ff57000
#define DT_N_S_soc_S_pcnt_3ff57000_FULL_NAME_UPPER_TOKEN PCNT_3FF57000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pcnt_3ff57000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pcnt_3ff57000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pcnt_3ff57000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_NODELABEL(fn) fn(pcnt)
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pcnt, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pcnt_3ff57000_CHILD_NUM 0
#define DT_N_S_soc_S_pcnt_3ff57000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_pcnt_3ff57000_HASH jIeI5MdLbR8MokLEoBEfN97mBuj00oNECPqiw5qG24Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pcnt_3ff57000_ORD 64
#define DT_N_S_soc_S_pcnt_3ff57000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pcnt_3ff57000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pcnt_3ff57000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pcnt_3ff57000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_pcnt DT_N_S_soc_S_pcnt_3ff57000
#define DT_N_NODELABEL_pcnt              DT_N_S_soc_S_pcnt_3ff57000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pcnt_3ff57000_REG_NUM 1
#define DT_N_S_soc_S_pcnt_3ff57000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_REG_IDX_0_VAL_ADDRESS 1073049600 /* 0x3ff57000 */
#define DT_N_S_soc_S_pcnt_3ff57000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pcnt_3ff57000_RANGES_NUM 0
#define DT_N_S_soc_S_pcnt_3ff57000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_NUM 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_irq 48
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_MATCHES_espressif_esp32_pcnt 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_COMPAT_MODEL_IDX_0 "esp32-pcnt"
#define DT_N_S_soc_S_pcnt_3ff57000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pcnt_3ff57000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pcnt_3ff57000_P_status "disabled"
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_status_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible {"espressif,esp32-pcnt"}
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0 "espressif,esp32-pcnt"
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-pcnt
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_pcnt
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PCNT
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg {1073049600 /* 0x3ff57000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_0 1073049600
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pcnt_3ff57000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts {48 /* 0x30 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_0 48
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_VAL_offset 15
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0, offset)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0, offset)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_3ff57000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_LEN 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_wakeup_source 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pcnt_3ff57000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc_timer@3ff48004
 *
 * Node identifier: DT_N_S_soc_S_rtc_timer_3ff48004
 *
 * Binding (compatible = espressif,esp32-rtc-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-rtc-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_PATH "/soc/rtc_timer@3ff48004"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME "rtc_timer@3ff48004"
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME_UNQUOTED rtc_timer@3ff48004
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME_TOKEN rtc_timer_3ff48004
#define DT_N_S_soc_S_rtc_timer_3ff48004_FULL_NAME_UPPER_TOKEN RTC_TIMER_3FF48004

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_NODELABEL(fn) fn(rtc_timer)
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc_timer, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_timer_3ff48004_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_HASH PjUa9LAQXZnyYkisd79RkaffiKwC_xq2fx4yEYDmR88

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_ORD 65
#define DT_N_S_soc_S_rtc_timer_3ff48004_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_EXISTS 1
#define DT_N_INST_0_espressif_esp32_rtc_timer DT_N_S_soc_S_rtc_timer_3ff48004
#define DT_N_NODELABEL_rtc_timer              DT_N_S_soc_S_rtc_timer_3ff48004

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_NUM 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_IDX_0_VAL_ADDRESS 1072988164 /* 0x3ff48004 */
#define DT_N_S_soc_S_rtc_timer_3ff48004_REG_IDX_0_VAL_SIZE 12 /* 0xc */
#define DT_N_S_soc_S_rtc_timer_3ff48004_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_MATCHES_espressif_esp32_rtc_timer 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_COMPAT_MODEL_IDX_0 "esp32-rtc-timer"
#define DT_N_S_soc_S_rtc_timer_3ff48004_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status "disabled"
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible {"espressif,esp32-rtc-timer"}
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0 "espressif,esp32-rtc-timer"
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-rtc-timer
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_rtc_timer
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_RTC_TIMER
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg {1072988164 /* 0x3ff48004 */, 12 /* 0xc */}
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_0 1072988164
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_IDX_1 12
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_VAL_offset 34
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0, offset)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0, offset)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_3ff48004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_timer_3ff48004_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sha@3ff03000
 *
 * Node identifier: DT_N_S_soc_S_sha_3ff03000
 *
 * Binding (compatible = espressif,esp32-sha):
 *   $ZEPHYR_BASE/dts/bindings/crypto/espressif,esp32-sha.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sha_3ff03000_PATH "/soc/sha@3ff03000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sha_3ff03000_FULL_NAME "sha@3ff03000"
#define DT_N_S_soc_S_sha_3ff03000_FULL_NAME_UNQUOTED sha@3ff03000
#define DT_N_S_soc_S_sha_3ff03000_FULL_NAME_TOKEN sha_3ff03000
#define DT_N_S_soc_S_sha_3ff03000_FULL_NAME_UPPER_TOKEN SHA_3FF03000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sha_3ff03000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sha_3ff03000_CHILD_IDX 42

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sha_3ff03000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_NODELABEL(fn) fn(sha)
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sha, __VA_ARGS__)
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sha_3ff03000_CHILD_NUM 0
#define DT_N_S_soc_S_sha_3ff03000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sha_3ff03000_HASH EeyDOdaLkJ4dKXcWY5XgIE1tDyH7SzLpd1yubWMc6kM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sha_3ff03000_ORD 66
#define DT_N_S_soc_S_sha_3ff03000_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sha_3ff03000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sha_3ff03000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sha_3ff03000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_sha DT_N_S_soc_S_sha_3ff03000
#define DT_N_NODELABEL_sha              DT_N_S_soc_S_sha_3ff03000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sha_3ff03000_REG_NUM 1
#define DT_N_S_soc_S_sha_3ff03000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_REG_IDX_0_VAL_ADDRESS 1072705536 /* 0x3ff03000 */
#define DT_N_S_soc_S_sha_3ff03000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_sha_3ff03000_RANGES_NUM 0
#define DT_N_S_soc_S_sha_3ff03000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sha_3ff03000_IRQ_NUM 0
#define DT_N_S_soc_S_sha_3ff03000_IRQ_LEVEL 0
#define DT_N_S_soc_S_sha_3ff03000_COMPAT_MATCHES_espressif_esp32_sha 1
#define DT_N_S_soc_S_sha_3ff03000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sha_3ff03000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_COMPAT_MODEL_IDX_0 "esp32-sha"
#define DT_N_S_soc_S_sha_3ff03000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sha_3ff03000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sha_3ff03000_P_status "okay"
#define DT_N_S_soc_S_sha_3ff03000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_sha_3ff03000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sha_3ff03000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sha_3ff03000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_sha_3ff03000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_sha_3ff03000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sha_3ff03000, status, 0)
#define DT_N_S_soc_S_sha_3ff03000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sha_3ff03000, status, 0)
#define DT_N_S_soc_S_sha_3ff03000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sha_3ff03000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sha_3ff03000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sha_3ff03000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sha_3ff03000_P_status_LEN 1
#define DT_N_S_soc_S_sha_3ff03000_P_status_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_compatible {"espressif,esp32-sha"}
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_IDX_0 "espressif,esp32-sha"
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sha
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sha
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SHA
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sha_3ff03000, compatible, 0)
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sha_3ff03000, compatible, 0)
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sha_3ff03000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sha_3ff03000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_LEN 1
#define DT_N_S_soc_S_sha_3ff03000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_reg {1072705536 /* 0x3ff03000 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_sha_3ff03000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_reg_IDX_0 1072705536
#define DT_N_S_soc_S_sha_3ff03000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_reg_IDX_1 256
#define DT_N_S_soc_S_sha_3ff03000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_IDX_0_VAL_offset 31
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_sha_3ff03000, clocks, 0, offset)
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_sha_3ff03000, clocks, 0, offset)
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sha_3ff03000, clocks, 0)
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sha_3ff03000, clocks, 0)
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sha_3ff03000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sha_3ff03000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_LEN 1
#define DT_N_S_soc_S_sha_3ff03000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sha_3ff03000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_wakeup_source 0
#define DT_N_S_soc_S_sha_3ff03000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sha_3ff03000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sha_3ff03000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@3ff64000
 *
 * Node identifier: DT_N_S_soc_S_spi_3ff64000
 *
 * Binding (compatible = espressif,esp32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/espressif,esp32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_3ff64000_PATH "/soc/spi@3ff64000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME "spi@3ff64000"
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME_UNQUOTED spi@3ff64000
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME_TOKEN spi_3ff64000
#define DT_N_S_soc_S_spi_3ff64000_FULL_NAME_UPPER_TOKEN SPI_3FF64000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_3ff64000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_3ff64000_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_3ff64000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_3ff64000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_3ff64000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_3ff64000_HASH 4iuEPEo0U9d_OuHWeK01B9ZjBKzmQBJdsltAmSo8hsQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_3ff64000_ORD 67
#define DT_N_S_soc_S_spi_3ff64000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_3ff64000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	27, /* /pin-controller/spim2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_3ff64000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_3ff64000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_spi DT_N_S_soc_S_spi_3ff64000
#define DT_N_NODELABEL_spi2             DT_N_S_soc_S_spi_3ff64000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_3ff64000_REG_NUM 1
#define DT_N_S_soc_S_spi_3ff64000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_REG_IDX_0_VAL_ADDRESS 1073102848 /* 0x3ff64000 */
#define DT_N_S_soc_S_spi_3ff64000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_3ff64000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_3ff64000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_3ff64000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_MATCHES_espressif_esp32_spi 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_COMPAT_MODEL_IDX_0 "esp32-spi"
#define DT_N_S_soc_S_spi_3ff64000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_3ff64000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spim2_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_3ff64000_P_reg {1073102848 /* 0x3ff64000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_0 1073102848
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_3ff64000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spim2_default
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spim2_default
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_half_duplex 0
#define DT_N_S_soc_S_spi_3ff64000_P_half_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dummy_comp 0
#define DT_N_S_soc_S_spi_3ff64000_P_dummy_comp_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_sio 0
#define DT_N_S_soc_S_spi_3ff64000_P_sio_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dma_enabled 0
#define DT_N_S_soc_S_spi_3ff64000_P_dma_enabled_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dma_clk 19
#define DT_N_S_soc_S_spi_3ff64000_P_dma_clk_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_dma_host 0
#define DT_N_S_soc_S_spi_3ff64000_P_dma_host_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clk_as_cs 0
#define DT_N_S_soc_S_spi_3ff64000_P_clk_as_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_positive_cs 0
#define DT_N_S_soc_S_spi_3ff64000_P_positive_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_use_iomux 0
#define DT_N_S_soc_S_spi_3ff64000_P_use_iomux_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_line_idle_low 0
#define DT_N_S_soc_S_spi_3ff64000_P_line_idle_low_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_status "okay"
#define DT_N_S_soc_S_spi_3ff64000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_3ff64000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_3ff64000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_3ff64000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, status, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, status, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_status_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_compatible {"espressif,esp32-spi"}
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0 "espressif,esp32-spi"
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-spi
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_spi
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SPI
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_spi_3ff64000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_VAL_offset 17
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0, offset)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0, offset)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff64000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_3ff64000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_3ff64000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_3ff64000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@3ff65000
 *
 * Node identifier: DT_N_S_soc_S_spi_3ff65000
 *
 * Binding (compatible = espressif,esp32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/espressif,esp32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_3ff65000_PATH "/soc/spi@3ff65000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME "spi@3ff65000"
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME_UNQUOTED spi@3ff65000
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME_TOKEN spi_3ff65000
#define DT_N_S_soc_S_spi_3ff65000_FULL_NAME_UPPER_TOKEN SPI_3FF65000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_3ff65000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_3ff65000_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_3ff65000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_NODELABEL(fn) fn(spi3)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_3ff65000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_3ff65000_HASH tKfyq4D5f6VWFu6qbaNPBnrxMXKbM0aeSMVcqkSr5Ms

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_3ff65000_ORD 68
#define DT_N_S_soc_S_spi_3ff65000_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_3ff65000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	30, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_3ff65000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_3ff65000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_spi DT_N_S_soc_S_spi_3ff65000
#define DT_N_NODELABEL_spi3             DT_N_S_soc_S_spi_3ff65000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_3ff65000_REG_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_REG_IDX_0_VAL_ADDRESS 1073106944 /* 0x3ff65000 */
#define DT_N_S_soc_S_spi_3ff65000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_3ff65000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_3ff65000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_3ff65000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_MATCHES_espressif_esp32_spi 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_COMPAT_MODEL_IDX_0 "esp32-spi"
#define DT_N_S_soc_S_spi_3ff65000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_3ff65000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spim3_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_3ff65000_P_reg {1073106944 /* 0x3ff65000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_0 1073106944
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_3ff65000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spim3_default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spim3_default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_half_duplex 0
#define DT_N_S_soc_S_spi_3ff65000_P_half_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dummy_comp 0
#define DT_N_S_soc_S_spi_3ff65000_P_dummy_comp_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_sio 0
#define DT_N_S_soc_S_spi_3ff65000_P_sio_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_enabled 0
#define DT_N_S_soc_S_spi_3ff65000_P_dma_enabled_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_clk 19
#define DT_N_S_soc_S_spi_3ff65000_P_dma_clk_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_host 1
#define DT_N_S_soc_S_spi_3ff65000_P_dma_host_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clk_as_cs 0
#define DT_N_S_soc_S_spi_3ff65000_P_clk_as_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_positive_cs 0
#define DT_N_S_soc_S_spi_3ff65000_P_positive_cs_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_use_iomux 0
#define DT_N_S_soc_S_spi_3ff65000_P_use_iomux_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_line_idle_low 0
#define DT_N_S_soc_S_spi_3ff65000_P_line_idle_low_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_status "okay"
#define DT_N_S_soc_S_spi_3ff65000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_3ff65000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_3ff65000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_3ff65000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, status, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_status_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_compatible {"espressif,esp32-spi"}
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0 "espressif,esp32-spi"
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-spi
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_spi
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SPI
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_spi_3ff65000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_VAL_offset 18
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0, offset)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0, offset)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_3ff65000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_3ff65000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_3ff65000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_3ff65000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/touch@3ff48858
 *
 * Node identifier: DT_N_S_soc_S_touch_3ff48858
 *
 * Binding (compatible = espressif,esp32-touch):
 *   $ZEPHYR_BASE/dts/bindings/input/espressif,esp32-touch-sensor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_touch_3ff48858_PATH "/soc/touch@3ff48858"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME "touch@3ff48858"
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME_UNQUOTED touch@3ff48858
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME_TOKEN touch_3ff48858
#define DT_N_S_soc_S_touch_3ff48858_FULL_NAME_UPPER_TOKEN TOUCH_3FF48858

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_touch_3ff48858_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_touch_3ff48858_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_touch_3ff48858_NODELABEL_NUM 1
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_NODELABEL(fn) fn(touch)
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_NODELABEL_VARGS(fn, ...) fn(touch, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_touch_3ff48858_CHILD_NUM 0
#define DT_N_S_soc_S_touch_3ff48858_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_touch_3ff48858_HASH ruHcWOy_TvYbht_nLsoXQkAaQmY0PsXzO1usPfvkl7k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_touch_3ff48858_ORD 69
#define DT_N_S_soc_S_touch_3ff48858_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_touch_3ff48858_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_touch_3ff48858_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_touch_3ff48858_EXISTS 1
#define DT_N_INST_0_espressif_esp32_touch DT_N_S_soc_S_touch_3ff48858
#define DT_N_NODELABEL_touch              DT_N_S_soc_S_touch_3ff48858

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_touch_3ff48858_REG_NUM 1
#define DT_N_S_soc_S_touch_3ff48858_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_REG_IDX_0_VAL_ADDRESS 1072990296 /* 0x3ff48858 */
#define DT_N_S_soc_S_touch_3ff48858_REG_IDX_0_VAL_SIZE 56 /* 0x38 */
#define DT_N_S_soc_S_touch_3ff48858_RANGES_NUM 0
#define DT_N_S_soc_S_touch_3ff48858_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_touch_3ff48858_IRQ_NUM 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_IRQ_LEVEL 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_MATCHES_espressif_esp32_touch 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_COMPAT_MODEL_IDX_0 "esp32-touch"
#define DT_N_S_soc_S_touch_3ff48858_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_touch_3ff48858_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_touch_3ff48858_P_debounce_interval_ms 30
#define DT_N_S_soc_S_touch_3ff48858_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt 2700000
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_IDX_0_ENUM_VAL_2700000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_ENUM_VAL_2700000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt 500000
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_IDX_0_ENUM_VAL_500000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_ENUM_VAL_500000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_lref_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt 1000000
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_IDX_0_ENUM_VAL_1000000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_ENUM_VAL_1000000_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_href_atten_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_mode 2
#define DT_N_S_soc_S_touch_3ff48858_P_filter_mode_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_debounce_cnt 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_debounce_cnt_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_noise_thr 0
#define DT_N_S_soc_S_touch_3ff48858_P_filter_noise_thr_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_jitter_step 4
#define DT_N_S_soc_S_touch_3ff48858_P_filter_jitter_step_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_smooth_level 1
#define DT_N_S_soc_S_touch_3ff48858_P_filter_smooth_level_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_status "disabled"
#define DT_N_S_soc_S_touch_3ff48858_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_touch_3ff48858_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_touch_3ff48858_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_3ff48858, status, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_3ff48858, status, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_3ff48858, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_3ff48858, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_status_LEN 1
#define DT_N_S_soc_S_touch_3ff48858_P_status_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_compatible {"espressif,esp32-touch"}
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0 "espressif,esp32-touch"
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-touch
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_touch
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TOUCH
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_3ff48858, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_LEN 1
#define DT_N_S_soc_S_touch_3ff48858_P_compatible_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_reg {1072990296 /* 0x3ff48858 */, 56 /* 0x38 */}
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_0 1072990296
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_reg_IDX_1 56
#define DT_N_S_soc_S_touch_3ff48858_P_reg_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_touch_3ff48858_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_3ff48858, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_touch_3ff48858_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_wakeup_source 0
#define DT_N_S_soc_S_touch_3ff48858_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_touch_3ff48858_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/trng@3ff75144
 *
 * Node identifier: DT_N_S_soc_S_trng_3ff75144
 *
 * Binding (compatible = espressif,esp32-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/espressif,esp32-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_trng_3ff75144_PATH "/soc/trng@3ff75144"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME "trng@3ff75144"
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME_UNQUOTED trng@3ff75144
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME_TOKEN trng_3ff75144
#define DT_N_S_soc_S_trng_3ff75144_FULL_NAME_UPPER_TOKEN TRNG_3FF75144

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_trng_3ff75144_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_trng_3ff75144_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_trng_3ff75144_NODELABEL_NUM 1
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_NODELABEL(fn) fn(trng0)
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_NODELABEL_VARGS(fn, ...) fn(trng0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_trng_3ff75144_CHILD_NUM 0
#define DT_N_S_soc_S_trng_3ff75144_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_trng_3ff75144_HASH OAUDnbaGdXu7WeVVuy8HpaaRBZBMdZTgzkJtxoZiGGc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_trng_3ff75144_ORD 70
#define DT_N_S_soc_S_trng_3ff75144_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_trng_3ff75144_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_trng_3ff75144_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_trng_3ff75144_EXISTS 1
#define DT_N_INST_0_espressif_esp32_trng DT_N_S_soc_S_trng_3ff75144
#define DT_N_NODELABEL_trng0             DT_N_S_soc_S_trng_3ff75144

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_trng_3ff75144_REG_NUM 1
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_VAL_ADDRESS 1073172804 /* 0x3ff75144 */
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_trng_3ff75144_RANGES_NUM 0
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_trng_3ff75144_IRQ_NUM 0
#define DT_N_S_soc_S_trng_3ff75144_IRQ_LEVEL 0
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_MATCHES_espressif_esp32_trng 1
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_MODEL_IDX_0 "esp32-trng"
#define DT_N_S_soc_S_trng_3ff75144_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_trng_3ff75144_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_trng_3ff75144_P_reg {1073172804 /* 0x3ff75144 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_0 1073172804
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_1 4
#define DT_N_S_soc_S_trng_3ff75144_P_reg_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status "okay"
#define DT_N_S_soc_S_trng_3ff75144_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_trng_3ff75144_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_trng_3ff75144_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_trng_3ff75144_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_3ff75144, status, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_3ff75144, status, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_3ff75144, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_3ff75144, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_status_LEN 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible {"espressif,esp32-trng"}
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0 "espressif,esp32-trng"
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-trng
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_trng
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TRNG
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_3ff75144, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_LEN 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_IDX_0_VAL_offset 24
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_trng_3ff75144, clocks, 0, offset)
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_trng_3ff75144, clocks, 0, offset)
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_3ff75144, clocks, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_3ff75144, clocks, 0)
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_3ff75144, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_3ff75144, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_LEN 1
#define DT_N_S_soc_S_trng_3ff75144_P_clocks_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_wakeup_source 0
#define DT_N_S_soc_S_trng_3ff75144_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_trng_3ff75144_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@3ff40000
 *
 * Node identifier: DT_N_S_soc_S_uart_3ff40000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_3ff40000_PATH "/soc/uart@3ff40000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME "uart@3ff40000"
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME_UNQUOTED uart@3ff40000
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME_TOKEN uart_3ff40000
#define DT_N_S_soc_S_uart_3ff40000_FULL_NAME_UPPER_TOKEN UART_3FF40000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff40000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_3ff40000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_3ff40000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_3ff40000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_3ff40000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_3ff40000_HASH ZJ6nU7qWwJ_nE_jDJQ2xPEXnIZPOf39wQ05Dj2rCldo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_3ff40000_ORD 71
#define DT_N_S_soc_S_uart_3ff40000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_3ff40000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	33, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_3ff40000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff40000_EXISTS 1
#define DT_N_ALIAS_uart_0                DT_N_S_soc_S_uart_3ff40000
#define DT_N_INST_0_espressif_esp32_uart DT_N_S_soc_S_uart_3ff40000
#define DT_N_NODELABEL_uart0             DT_N_S_soc_S_uart_3ff40000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_3ff40000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_VAL_ADDRESS 1072955392 /* 0x3ff40000 */
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff40000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_3ff40000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_3ff40000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_3ff40000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff40000_P_reg {1072955392 /* 0x3ff40000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_0 1072955392
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff40000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits 8
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_3ff40000_P_hw_rs485_hd_mode_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff40000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3ff40000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity "none"
#define DT_N_S_soc_S_uart_3ff40000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_3ff40000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_3ff40000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_3ff40000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status "okay"
#define DT_N_S_soc_S_uart_3ff40000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_3ff40000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_3ff40000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_3ff40000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, status, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, status, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_status_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts {34 /* 0x22 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_3ff40000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0, offset)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0, offset)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff40000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_3ff40000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_3ff40000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_tx_invert 0
#define DT_N_S_soc_S_uart_3ff40000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_rx_invert 0
#define DT_N_S_soc_S_uart_3ff40000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/uart@3ff50000
 *
 * Node identifier: DT_N_S_soc_S_uart_3ff50000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_3ff50000_PATH "/soc/uart@3ff50000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME "uart@3ff50000"
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME_UNQUOTED uart@3ff50000
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME_TOKEN uart_3ff50000
#define DT_N_S_soc_S_uart_3ff50000_FULL_NAME_UPPER_TOKEN UART_3FF50000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff50000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_3ff50000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_3ff50000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_3ff50000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_3ff50000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_3ff50000_HASH epOivShIibzQG6Ymd3l23es4DCViHonf1S_OBpBu47o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_3ff50000_ORD 72
#define DT_N_S_soc_S_uart_3ff50000_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_3ff50000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	36, /* /pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_3ff50000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff50000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_uart DT_N_S_soc_S_uart_3ff50000
#define DT_N_NODELABEL_uart1             DT_N_S_soc_S_uart_3ff50000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_3ff50000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_VAL_ADDRESS 1073020928 /* 0x3ff50000 */
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff50000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_3ff50000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_3ff50000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_3ff50000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart1_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff50000_P_reg {1073020928 /* 0x3ff50000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_0 1073020928
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff50000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart1_default
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart1_default
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits 8
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_3ff50000_P_hw_rs485_hd_mode_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff50000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3ff50000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity "none"
#define DT_N_S_soc_S_uart_3ff50000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_3ff50000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_3ff50000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_3ff50000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status "disabled"
#define DT_N_S_soc_S_uart_3ff50000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_3ff50000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_3ff50000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, status, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, status, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_status_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts {35 /* 0x23 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_3ff50000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_VAL_offset 2
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0, offset)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0, offset)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff50000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_3ff50000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_3ff50000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_tx_invert 0
#define DT_N_S_soc_S_uart_3ff50000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_rx_invert 0
#define DT_N_S_soc_S_uart_3ff50000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/uart@3ff6e000
 *
 * Node identifier: DT_N_S_soc_S_uart_3ff6e000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_3ff6e000_PATH "/soc/uart@3ff6e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME "uart@3ff6e000"
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME_UNQUOTED uart@3ff6e000
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME_TOKEN uart_3ff6e000
#define DT_N_S_soc_S_uart_3ff6e000_FULL_NAME_UPPER_TOKEN UART_3FF6E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff6e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_3ff6e000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_3ff6e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_NODELABEL(fn) fn(uart2)
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_3ff6e000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_3ff6e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_3ff6e000_HASH OWzwi7XoV5M7SAUUw9Em04WWn1fkk2CLgOBWB787GI8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_3ff6e000_ORD 73
#define DT_N_S_soc_S_uart_3ff6e000_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_3ff6e000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	39, /* /pin-controller/uart2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_3ff6e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff6e000_EXISTS 1
#define DT_N_INST_2_espressif_esp32_uart DT_N_S_soc_S_uart_3ff6e000
#define DT_N_NODELABEL_uart2             DT_N_S_soc_S_uart_3ff6e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_3ff6e000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_VAL_ADDRESS 1073143808 /* 0x3ff6e000 */
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff6e000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_3ff6e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_3ff6e000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart2_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff6e000_P_reg {1073143808 /* 0x3ff6e000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_0 1073143808
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart2_default
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart2_default
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits "1"
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_STRING_UNQUOTED 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_STRING_TOKEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_STRING_UPPER_TOKEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0 "1"
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, stop_bits, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_stop_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits 8
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_IDX_0_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_rs485_hd_mode_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff6e000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity "none"
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status "disabled"
#define DT_N_S_soc_S_uart_3ff6e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_3ff6e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_3ff6e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_status_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts {36 /* 0x24 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_VAL_offset 3
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0, offset)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0, offset)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_3ff6e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_3ff6e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_3ff6e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_tx_invert 0
#define DT_N_S_soc_S_uart_3ff6e000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_rx_invert 0
#define DT_N_S_soc_S_uart_3ff6e000_P_rx_invert_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@3ff5f048
 *
 * Node identifier: DT_N_S_soc_S_watchdog_3ff5f048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_3ff5f048_PATH "/soc/watchdog@3ff5f048"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME "watchdog@3ff5f048"
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME_UNQUOTED watchdog@3ff5f048
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME_TOKEN watchdog_3ff5f048
#define DT_N_S_soc_S_watchdog_3ff5f048_FULL_NAME_UPPER_TOKEN WATCHDOG_3FF5F048

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_3ff5f048_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_3ff5f048_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_3ff5f048_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_NODELABEL(fn) fn(wdt0)
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_3ff5f048_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_3ff5f048_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_3ff5f048_HASH _bhIWP64iGOnT456YYWt8rcx3K1ZTHMEiVe1w_wHW84

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_3ff5f048_ORD 74
#define DT_N_S_soc_S_watchdog_3ff5f048_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_3ff5f048_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_3ff5f048_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_3ff5f048_EXISTS 1
#define DT_N_ALIAS_watchdog0                 DT_N_S_soc_S_watchdog_3ff5f048
#define DT_N_INST_0_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_3ff5f048
#define DT_N_NODELABEL_wdt0                  DT_N_S_soc_S_watchdog_3ff5f048

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_VAL_ADDRESS 1073082440 /* 0x3ff5f048 */
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_3ff5f048_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_MODEL_IDX_0 "esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff5f048_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_3ff5f048_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg {1073082440 /* 0x3ff5f048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_0 1073082440
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status "okay"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-watchdog
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_watchdog
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WATCHDOG
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_VAL_offset 8
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0, offset)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0, offset)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_3ff5f048_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@3ff60048
 *
 * Node identifier: DT_N_S_soc_S_watchdog_3ff60048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_3ff60048_PATH "/soc/watchdog@3ff60048"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME "watchdog@3ff60048"
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME_UNQUOTED watchdog@3ff60048
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME_TOKEN watchdog_3ff60048
#define DT_N_S_soc_S_watchdog_3ff60048_FULL_NAME_UPPER_TOKEN WATCHDOG_3FF60048

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_3ff60048_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_3ff60048_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_3ff60048_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_NODELABEL(fn) fn(wdt1)
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_3ff60048_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_3ff60048_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_3ff60048_HASH 0sJM_LZMcazl4nE2iFAijdzgENbaE8gXeyB7VzP2Sew

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_3ff60048_ORD 75
#define DT_N_S_soc_S_watchdog_3ff60048_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_3ff60048_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_3ff60048_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_3ff60048_EXISTS 1
#define DT_N_INST_1_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_3ff60048
#define DT_N_NODELABEL_wdt1                  DT_N_S_soc_S_watchdog_3ff60048

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_3ff60048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_VAL_ADDRESS 1073086536 /* 0x3ff60048 */
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_3ff60048_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_MODEL_IDX_0 "esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff60048_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_3ff60048_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg {1073086536 /* 0x3ff60048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_0 1073086536
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status "disabled"
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-watchdog
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_watchdog
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WATCHDOG
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts {20 /* 0x14 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_VAL_offset 9
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0, offset)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0, offset)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_3ff60048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_3ff60048_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff5f000
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff5f000
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff5f000_PATH "/soc/counter@3ff5f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME "counter@3ff5f000"
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME_UNQUOTED counter@3ff5f000
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME_TOKEN counter_3ff5f000
#define DT_N_S_soc_S_counter_3ff5f000_FULL_NAME_UPPER_TOKEN COUNTER_3FF5F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff5f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff5f000_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff5f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_NODELABEL(fn) fn(timer0)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff5f000_CHILD_NUM 1
#define DT_N_S_soc_S_counter_3ff5f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff5f000_HASH VmZDWmNYT9QuoaJNQ_dM__GjYTQ_aVdfXmcF1J7sKP4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff5f000_ORD 76
#define DT_N_S_soc_S_counter_3ff5f000_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff5f000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff5f000_SUPPORTS_ORDS \
	77, /* /soc/counter@3ff5f000/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff5f000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_timer DT_N_S_soc_S_counter_3ff5f000
#define DT_N_NODELABEL_timer0             DT_N_S_soc_S_counter_3ff5f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff5f000_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff5f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_REG_IDX_0_VAL_ADDRESS 1073082368 /* 0x3ff5f000 */
#define DT_N_S_soc_S_counter_3ff5f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff5f000_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff5f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff5f000_P_group 0
#define DT_N_S_soc_S_counter_3ff5f000_P_group_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff5f000_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_group_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_group_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_index 0
#define DT_N_S_soc_S_counter_3ff5f000_P_index_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff5f000_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_index_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_index_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff5f000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff5f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff5f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff5f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_reg {1073082368 /* 0x3ff5f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_0 1073082368
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff5f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts {14 /* 0xe */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_VAL_offset 8
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff5f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff5f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff5f000/counter
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff5f000_S_counter
 *
 * Binding (compatible = espressif,esp32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_PATH "/soc/counter@3ff5f000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/counter@3ff5f000) identifier: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_PARENT DT_N_S_soc_S_counter_3ff5f000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_HASH xN4tCiTTvofENXugRHL10ZDJdntpUk20XZVPHyDMFSg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_ORD 77
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_REQUIRES_ORDS \
	76, /* /soc/counter@3ff5f000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_EXISTS 1
#define DT_N_INST_0_espressif_esp32_counter DT_N_S_soc_S_counter_3ff5f000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_COMPAT_MATCHES_espressif_esp32_counter 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_COMPAT_MODEL_IDX_0 "esp32-counter"
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible {"espressif,esp32-counter"}
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_IDX_0 "espressif,esp32-counter"
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-counter
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_counter
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_COUNTER
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff5f000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff5f024
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff5f024
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff5f024_PATH "/soc/counter@3ff5f024"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME "counter@3ff5f024"
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME_UNQUOTED counter@3ff5f024
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME_TOKEN counter_3ff5f024
#define DT_N_S_soc_S_counter_3ff5f024_FULL_NAME_UPPER_TOKEN COUNTER_3FF5F024

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff5f024_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff5f024_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff5f024_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_NODELABEL(fn) fn(timer1)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer1, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff5f024_CHILD_NUM 1
#define DT_N_S_soc_S_counter_3ff5f024_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff5f024_HASH amW_5uw_I83K0YBBxkAUo70lzRW3Pmzx7O6XKyycowA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff5f024_ORD 78
#define DT_N_S_soc_S_counter_3ff5f024_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff5f024_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff5f024_SUPPORTS_ORDS \
	79, /* /soc/counter@3ff5f024/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff5f024_EXISTS 1
#define DT_N_INST_1_espressif_esp32_timer DT_N_S_soc_S_counter_3ff5f024
#define DT_N_NODELABEL_timer1             DT_N_S_soc_S_counter_3ff5f024

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff5f024_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff5f024_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_REG_IDX_0_VAL_ADDRESS 1073082404 /* 0x3ff5f024 */
#define DT_N_S_soc_S_counter_3ff5f024_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff5f024_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f024_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff5f024_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff5f024_P_group 0
#define DT_N_S_soc_S_counter_3ff5f024_P_group_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff5f024_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_group_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_group_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff5f024_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff5f024_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff5f024_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff5f024_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_reg {1073082404 /* 0x3ff5f024 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_0 1073082404
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff5f024_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts {15 /* 0xf */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_VAL_offset 8
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff5f024_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff5f024_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff5f024/counter
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff5f024_S_counter
 *
 * Binding (compatible = espressif,esp32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_PATH "/soc/counter@3ff5f024/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/counter@3ff5f024) identifier: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_PARENT DT_N_S_soc_S_counter_3ff5f024

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_HASH pBEvkh7wYSl92DWNFH5YeuLXAknrNN2j_r5vC9JOD_4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_ORD 79
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_REQUIRES_ORDS \
	78, /* /soc/counter@3ff5f024 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_EXISTS 1
#define DT_N_INST_1_espressif_esp32_counter DT_N_S_soc_S_counter_3ff5f024_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_REG_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_COMPAT_MATCHES_espressif_esp32_counter 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_COMPAT_MODEL_IDX_0 "esp32-counter"
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible {"espressif,esp32-counter"}
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_IDX_0 "espressif,esp32-counter"
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-counter
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_counter
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_COUNTER
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff5f024_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff60000
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff60000
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff60000_PATH "/soc/counter@3ff60000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME "counter@3ff60000"
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME_UNQUOTED counter@3ff60000
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME_TOKEN counter_3ff60000
#define DT_N_S_soc_S_counter_3ff60000_FULL_NAME_UPPER_TOKEN COUNTER_3FF60000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff60000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff60000_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff60000_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_NODELABEL(fn) fn(timer2)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer2, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff60000_CHILD_NUM 1
#define DT_N_S_soc_S_counter_3ff60000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_counter_3ff60000_S_counter)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000_S_counter)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff60000_HASH VQ_RbaiDt1CV78UNwE80uUC8ee3xnqJY_6zxp92QI10

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff60000_ORD 80
#define DT_N_S_soc_S_counter_3ff60000_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff60000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff60000_SUPPORTS_ORDS \
	81, /* /soc/counter@3ff60000/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff60000_EXISTS 1
#define DT_N_INST_2_espressif_esp32_timer DT_N_S_soc_S_counter_3ff60000
#define DT_N_NODELABEL_timer2             DT_N_S_soc_S_counter_3ff60000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff60000_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff60000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_REG_IDX_0_VAL_ADDRESS 1073086464 /* 0x3ff60000 */
#define DT_N_S_soc_S_counter_3ff60000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff60000_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff60000_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff60000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff60000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff60000_P_group 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_index 0
#define DT_N_S_soc_S_counter_3ff60000_P_index_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_3ff60000_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_index_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_index_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff60000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff60000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff60000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff60000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, status, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, status, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_reg {1073086464 /* 0x3ff60000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_0 1073086464
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff60000_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff60000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_VAL_offset 9
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff60000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff60000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff60000/counter
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff60000_S_counter
 *
 * Binding (compatible = espressif,esp32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_PATH "/soc/counter@3ff60000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/counter@3ff60000) identifier: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_PARENT DT_N_S_soc_S_counter_3ff60000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_HASH pWlGlgwhY1_6mwn642Y4lDKJpmJP4z0H6q9kDh3VdvU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_ORD 81
#define DT_N_S_soc_S_counter_3ff60000_S_counter_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_REQUIRES_ORDS \
	80, /* /soc/counter@3ff60000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_EXISTS 1
#define DT_N_INST_2_espressif_esp32_counter DT_N_S_soc_S_counter_3ff60000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff60000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_COMPAT_MATCHES_espressif_esp32_counter 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff60000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_COMPAT_MODEL_IDX_0 "esp32-counter"
#define DT_N_S_soc_S_counter_3ff60000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible {"espressif,esp32-counter"}
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_IDX_0 "espressif,esp32-counter"
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-counter
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_counter
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_COUNTER
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff60000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff60024
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff60024
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff60024_PATH "/soc/counter@3ff60024"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME "counter@3ff60024"
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME_UNQUOTED counter@3ff60024
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME_TOKEN counter_3ff60024
#define DT_N_S_soc_S_counter_3ff60024_FULL_NAME_UPPER_TOKEN COUNTER_3FF60024

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_3ff60024_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff60024_CHILD_IDX 37

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff60024_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_NODELABEL(fn) fn(timer3)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer3, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff60024_CHILD_NUM 1
#define DT_N_S_soc_S_counter_3ff60024_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_counter_3ff60024_S_counter)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024_S_counter)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff60024_HASH lgjouzEyuUrDqoK40heIBJVFYghUxn8psSHx7f2a1dI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff60024_ORD 82
#define DT_N_S_soc_S_counter_3ff60024_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff60024_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff60024_SUPPORTS_ORDS \
	83, /* /soc/counter@3ff60024/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff60024_EXISTS 1
#define DT_N_INST_3_espressif_esp32_timer DT_N_S_soc_S_counter_3ff60024
#define DT_N_NODELABEL_timer3             DT_N_S_soc_S_counter_3ff60024

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff60024_REG_NUM 1
#define DT_N_S_soc_S_counter_3ff60024_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_REG_IDX_0_VAL_ADDRESS 1073086500 /* 0x3ff60024 */
#define DT_N_S_soc_S_counter_3ff60024_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_3ff60024_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff60024_IRQ_NUM 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_3ff60024_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff60024_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff60024_P_group 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_index 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_prescaler 2
#define DT_N_S_soc_S_counter_3ff60024_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff60024_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff60024_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff60024_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, status, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, status, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_reg {1073086500 /* 0x3ff60024 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_0 1073086500
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_3ff60024_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_3ff60024_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_VAL_offset 9
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0, offset)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_P_clocks_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff60024_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff60024_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@3ff60024/counter
 *
 * Node identifier: DT_N_S_soc_S_counter_3ff60024_S_counter
 *
 * Binding (compatible = espressif,esp32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_PATH "/soc/counter@3ff60024/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FULL_NAME "counter"
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FULL_NAME_UNQUOTED counter
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FULL_NAME_TOKEN counter
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FULL_NAME_UPPER_TOKEN COUNTER

/* Node parent (/soc/counter@3ff60024) identifier: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_PARENT DT_N_S_soc_S_counter_3ff60024

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_NODELABEL_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_counter_3ff60024) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_HASH NUfRG2vNTwWp7w25TWDyDP0GxUiQx3gxfnwrU8GIn4k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_ORD 83
#define DT_N_S_soc_S_counter_3ff60024_S_counter_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_REQUIRES_ORDS \
	82, /* /soc/counter@3ff60024 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_EXISTS 1
#define DT_N_INST_3_espressif_esp32_counter DT_N_S_soc_S_counter_3ff60024_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_REG_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_3ff60024_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_COMPAT_MATCHES_espressif_esp32_counter 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_3ff60024_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_COMPAT_MODEL_IDX_0 "esp32-counter"
#define DT_N_S_soc_S_counter_3ff60024_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status "disabled"
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, status, 0)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible {"espressif,esp32-counter"}
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_IDX_0 "espressif,esp32-counter"
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-counter
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_counter
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_COUNTER
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, compatible, 0)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_3ff60024_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dcache1@3f800000
 *
 * Node identifier: DT_N_S_soc_S_dcache1_3f800000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dcache1_3f800000_PATH "/soc/dcache1@3f800000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME "dcache1@3f800000"
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME_UNQUOTED dcache1@3f800000
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME_TOKEN dcache1_3f800000
#define DT_N_S_soc_S_dcache1_3f800000_FULL_NAME_UPPER_TOKEN DCACHE1_3F800000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dcache1_3f800000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dcache1_3f800000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dcache1_3f800000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_NODELABEL(fn) fn(dcache1)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dcache1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dcache1_3f800000_CHILD_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_dcache1_3f800000_HASH JhTLNqrEAlQlq6f7EuUcvmZgzWnRB5EzBjxqW_fbxg4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dcache1_3f800000_ORD 84
#define DT_N_S_soc_S_dcache1_3f800000_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dcache1_3f800000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dcache1_3f800000_SUPPORTS_ORDS \
	85, /* /soc/dcache1@3f800000/psram0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dcache1_3f800000_EXISTS 1
#define DT_N_INST_4_zephyr_memory_region DT_N_S_soc_S_dcache1_3f800000
#define DT_N_INST_4_mmio_sram            DT_N_S_soc_S_dcache1_3f800000
#define DT_N_NODELABEL_dcache1           DT_N_S_soc_S_dcache1_3f800000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dcache1_3f800000_REG_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_REG_IDX_0_VAL_ADDRESS 1065353216 /* 0x3f800000 */
#define DT_N_S_soc_S_dcache1_3f800000_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_soc_S_dcache1_3f800000_RANGES_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_IRQ_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_IRQ_LEVEL 0
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_dcache1_3f800000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_dcache1_3f800000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dcache1_3f800000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region "DCACHE1"
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_STRING_UNQUOTED DCACHE1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_STRING_TOKEN DCACHE1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_STRING_UPPER_TOKEN DCACHE1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_IDX_0 "DCACHE1"
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0) \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dcache1_3f800000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_LEN 2
#define DT_N_S_soc_S_dcache1_3f800000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_reg {1065353216 /* 0x3f800000 */, 4194304 /* 0x400000 */}
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_0 1065353216
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_IDX_1 4194304
#define DT_N_S_soc_S_dcache1_3f800000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_wakeup_source 0
#define DT_N_S_soc_S_dcache1_3f800000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dcache1_3f800000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dcache1@3f800000/psram0
 *
 * Node identifier: DT_N_S_soc_S_dcache1_3f800000_S_psram0
 *
 * Binding (compatible = espressif,esp32-psram):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/espressif,esp32-psram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_PATH "/soc/dcache1@3f800000/psram0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME "psram0"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME_UNQUOTED psram0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME_TOKEN psram0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FULL_NAME_UPPER_TOKEN PSRAM0

/* Node parent (/soc/dcache1@3f800000) identifier: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_PARENT DT_N_S_soc_S_dcache1_3f800000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_NODELABEL_NUM 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_NODELABEL(fn) fn(psram0)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_NODELABEL_VARGS(fn, ...) fn(psram0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_CHILD_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_HASH pztSckc2_osdn_h1_OJ6CjNfIcTPyovILH06kQ9X0vk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_ORD 85
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_REQUIRES_ORDS \
	84, /* /soc/dcache1@3f800000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_EXISTS 1
#define DT_N_INST_0_espressif_esp32_psram DT_N_S_soc_S_dcache1_3f800000_S_psram0
#define DT_N_NODELABEL_psram0             DT_N_S_soc_S_dcache1_3f800000_S_psram0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_REG_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_RANGES_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_IRQ_NUM 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_IRQ_LEVEL 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_MATCHES_espressif_esp32_psram 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_COMPAT_MODEL_IDX_0 "esp32-psram"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_size 8388608
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_size_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible {"espressif,esp32-psram"}
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0 "espressif,esp32-psram"
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-psram
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_psram
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PSRAM
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_LEN 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_wakeup_source 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dcache1_3f800000_S_psram0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000
 *
 * Binding (compatible = espressif,esp32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/espressif,esp32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_PATH "/soc/flash-controller@3ff42000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME "flash-controller@3ff42000"
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME_UNQUOTED flash-controller@3ff42000
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME_TOKEN flash_controller_3ff42000
#define DT_N_S_soc_S_flash_controller_3ff42000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_3FF42000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_NODELABEL(fn) fn(flash)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_HASH iyzHihwCxbcSj6ECn8XYdN5jwX3xB0p0Ck3Yvv_7ZEg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_ORD 86
#define DT_N_S_soc_S_flash_controller_3ff42000_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_SUPPORTS_ORDS \
	87, /* /soc/flash-controller@3ff42000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_flash_controller DT_N_S_soc_S_flash_controller_3ff42000
#define DT_N_NODELABEL_flash                         DT_N_S_soc_S_flash_controller_3ff42000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_IDX_0_VAL_ADDRESS 1072963584 /* 0x3ff42000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_MATCHES_espressif_esp32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_COMPAT_MODEL_IDX_0 "esp32-flash-controller"
#define DT_N_S_soc_S_flash_controller_3ff42000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg {1072963584 /* 0x3ff42000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_0 1072963584
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible {"espressif,esp32-flash-controller"}
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0 "espressif,esp32-flash-controller"
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-flash-controller
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_flash_controller
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_3ff42000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_3ff42000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_PATH "/soc/flash-controller@3ff42000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME "flash@0"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME_UNQUOTED flash@0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME_TOKEN flash_0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FULL_NAME_UPPER_TOKEN FLASH_0

/* Node parent (/soc/flash-controller@3ff42000) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_3ff42000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_HASH 43PxI_LHqetsBze8f2Vz_zV_tbGiZ7ZtM_VPLQYk8Ks

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_ORD 87
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REQUIRES_ORDS \
	86, /* /soc/flash-controller@3ff42000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_SUPPORTS_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_REG_IDX_0_VAL_SIZE 4194304 /* 0x400000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg {0 /* 0x0 */, 4194304 /* 0x400000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_IDX_1 4194304
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_PATH "/soc/flash-controller@3ff42000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@3ff42000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_CHILD_NUM 11
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_CHILD_NUM_STATUS_OKAY 11
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_HASH _wYi5G6Xi6rzY7cdPb2uS8SpJdLhv8Bct_lNZqr8o3g

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_ORD 88
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_REQUIRES_ORDS \
	87, /* /soc/flash-controller@3ff42000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	89, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@1000 */ \
	90, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@10000 */ \
	91, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@20000 */ \
	92, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@170000 */ \
	93, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000 */ \
	94, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@330000 */ \
	95, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000 */ \
	96, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000 */ \
	97, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000 */ \
	98, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000 */ \
	99, /* /soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@1000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@1000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME "partition@1000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME_UNQUOTED partition@1000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME_TOKEN partition_1000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FULL_NAME_UPPER_TOKEN PARTITION_1000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_HASH 1whYnHcvDc_9MNNKRuISI2oJPSArV8rsf1sxGDMb4Ys

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_ORD 89
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_IDX_0_VAL_ADDRESS 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_REG_IDX_0_VAL_SIZE 61440 /* 0xf000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg {4096 /* 0x1000 */, 61440 /* 0xf000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_0 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_IDX_1 61440
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@10000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@10000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FULL_NAME "partition@10000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FULL_NAME_UNQUOTED partition@10000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FULL_NAME_TOKEN partition_10000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FULL_NAME_UPPER_TOKEN PARTITION_10000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_NODELABEL(fn) fn(sys_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sys_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_HASH aZlHeCubzTQ7G6npORKkZyBZjK0CxY1dEs4EGxGP0h4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_ORD 90
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_EXISTS 1
#define DT_N_NODELABEL_sys_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_ADDRESS 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label "sys"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_STRING_UNQUOTED sys
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_STRING_TOKEN sys
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_STRING_UPPER_TOKEN SYS
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_IDX_0 "sys"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_reg {65536 /* 0x10000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_0 65536
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@20000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@20000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME "partition@20000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UNQUOTED partition@20000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_TOKEN partition_20000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UPPER_TOKEN PARTITION_20000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_HASH d560DnIflhJHDvICT4TfIGL9mZYkmU7weUgulc3EQ1k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_ORD 91
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_ADDRESS 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_SIZE 1376256 /* 0x150000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg {131072 /* 0x20000 */, 1376256 /* 0x150000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0 131072
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1 1376256
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@170000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@170000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME "partition@170000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_UNQUOTED partition@170000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_TOKEN partition_170000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_UPPER_TOKEN PARTITION_170000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_HASH LmSmrKK7DF5nvPCBAkgVTT1Fu4td_o03KUH9_0kMjqM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_ORD 92
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_VAL_ADDRESS 1507328 /* 0x170000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_VAL_SIZE 1376256 /* 0x150000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg {1507328 /* 0x170000 */, 1376256 /* 0x150000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_0 1507328
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_1 1376256
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@2c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME "partition@2c0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME_UNQUOTED partition@2c0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME_TOKEN partition_2c0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FULL_NAME_UPPER_TOKEN PARTITION_2C0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_NODELABEL(fn) fn(slot0_appcpu_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_appcpu_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_HASH Pr03hKJ4c56tuxYAUI8JCj3EjzJxhK9GBbZOi2Gx5dA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_ORD 93
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_EXISTS 1
#define DT_N_NODELABEL_slot0_appcpu_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_IDX_0_VAL_ADDRESS 2883584 /* 0x2c0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_REG_IDX_0_VAL_SIZE 458752 /* 0x70000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label "image-0-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_STRING_UNQUOTED image-0-appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_STRING_TOKEN image_0_appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_STRING_UPPER_TOKEN IMAGE_0_APPCPU
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_IDX_0 "image-0-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg {2883584 /* 0x2c0000 */, 458752 /* 0x70000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_0 2883584
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_IDX_1 458752
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@330000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@330000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME "partition@330000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME_UNQUOTED partition@330000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME_TOKEN partition_330000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FULL_NAME_UPPER_TOKEN PARTITION_330000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_NODELABEL(fn) fn(slot1_appcpu_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_appcpu_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_HASH DL3440iMLui_kNHLUzTXL1_9VaDhDpagZ1qpBhyrBdM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_ORD 94
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_EXISTS 1
#define DT_N_NODELABEL_slot1_appcpu_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_IDX_0_VAL_ADDRESS 3342336 /* 0x330000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_REG_IDX_0_VAL_SIZE 458752 /* 0x70000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_PARTITION_ID 5

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label "image-1-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_STRING_UNQUOTED image-1-appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_STRING_TOKEN image_1_appcpu
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_STRING_UPPER_TOKEN IMAGE_1_APPCPU
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_IDX_0 "image-1-appcpu"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg {3342336 /* 0x330000 */, 458752 /* 0x70000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_0 3342336
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_IDX_1 458752
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3a0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME "partition@3a0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME_UNQUOTED partition@3a0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME_TOKEN partition_3a0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FULL_NAME_UPPER_TOKEN PARTITION_3A0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_NODELABEL(fn) fn(slot0_lpcore_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_lpcore_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_HASH PC9l85GZQxrR4qDvgqKw5mmI1BACOCPwLm3oGk_T8e8

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_ORD 95
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_EXISTS 1
#define DT_N_NODELABEL_slot0_lpcore_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_IDX_0_VAL_ADDRESS 3801088 /* 0x3a0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_PARTITION_ID 6

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label "image-0-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_STRING_UNQUOTED image-0-lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_STRING_TOKEN image_0_lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_STRING_UPPER_TOKEN IMAGE_0_LPCORE
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_IDX_0 "image-0-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg {3801088 /* 0x3a0000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_0 3801088
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3a8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME "partition@3a8000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME_UNQUOTED partition@3a8000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME_TOKEN partition_3a8000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FULL_NAME_UPPER_TOKEN PARTITION_3A8000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_NODELABEL(fn) fn(slot1_lpcore_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_lpcore_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_HASH 7Wyv5aLJFbY9l_yXn_sDiee7pR8LGj1cNr9R0Gam1sA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_ORD 96
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_EXISTS 1
#define DT_N_NODELABEL_slot1_lpcore_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_IDX_0_VAL_ADDRESS 3833856 /* 0x3a8000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_PARTITION_ID 7

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label "image-1-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_STRING_UNQUOTED image-1-lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_STRING_TOKEN image_1_lpcore
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_STRING_UPPER_TOKEN IMAGE_1_LPCORE
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_IDX_0 "image-1-lpcore"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg {3833856 /* 0x3a8000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_0 3833856
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3b0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME "partition@3b0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME_UNQUOTED partition@3b0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME_TOKEN partition_3b0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FULL_NAME_UPPER_TOKEN PARTITION_3B0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_HASH __eR35X0b4z0EjFZWhk4NYyh0KDm6WtBvuDe999_yss

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_ORD 97
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_IDX_0_VAL_ADDRESS 3866624 /* 0x3b0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_PARTITION_ID 8

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg {3866624 /* 0x3b0000 */, 196608 /* 0x30000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_0 3866624
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_IDX_1 196608
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3e0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME "partition@3e0000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_UNQUOTED partition@3e0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_TOKEN partition_3e0000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_UPPER_TOKEN PARTITION_3E0000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_NODELABEL(fn) fn(scratch_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(scratch_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_HASH jv63NowcZC8s4ZmjMxQ0e6l9jcXsxfEr0mzBkyJusc4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_ORD 98
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_VAL_ADDRESS 4063232 /* 0x3e0000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_VAL_SIZE 126976 /* 0x1f000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_PARTITION_ID 9

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg {4063232 /* 0x3e0000 */, 126976 /* 0x1f000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_0 4063232
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_1 126976
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PATH "/soc/flash-controller@3ff42000/flash@0/partitions/partition@3ff000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME "partition@3ff000"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME_UNQUOTED partition@3ff000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME_TOKEN partition_3ff000
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FULL_NAME_UPPER_TOKEN PARTITION_3FF000

/* Node parent (/soc/flash-controller@3ff42000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PARENT DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_NODELABEL(fn) fn(coredump_partition)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_NODELABEL_VARGS(fn, ...) fn(coredump_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_HASH GDbW_q7PSd5HILK5KFSFL_WV60sBooxidGgoh5Yp5Xs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_ORD 99
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REQUIRES_ORDS \
	88, /* /soc/flash-controller@3ff42000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_EXISTS 1
#define DT_N_NODELABEL_coredump_partition DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_IDX_0_VAL_ADDRESS 4190208 /* 0x3ff000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_PARTITION_ID 10

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label "coredump"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_STRING_UNQUOTED coredump
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_STRING_TOKEN coredump
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_STRING_UPPER_TOKEN COREDUMP
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_IDX_0 "coredump"
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg {4190208 /* 0x3ff000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_0 4190208
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/gpio/gpio@3ff44800
 *
 * Node identifier: DT_N_S_soc_S_gpio_S_gpio_3ff44800
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_PATH "/soc/gpio/gpio@3ff44800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME "gpio@3ff44800"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME_UNQUOTED gpio@3ff44800
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME_TOKEN gpio_3ff44800
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FULL_NAME_UPPER_TOKEN GPIO_3FF44800

/* Node parent (/soc/gpio) identifier: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_PARENT DT_N_S_soc_S_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_NODELABEL(fn) fn(gpio1)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_HASH Nf49Zh0F2I6gqXbS8e4JanK_GQiu_1LwSKd4q1Fq6pk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_ORD 100
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REQUIRES_ORDS \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	10, /* /soc/gpio */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_EXISTS 1
#define DT_N_INST_1_espressif_esp32_gpio DT_N_S_soc_S_gpio_S_gpio_3ff44800
#define DT_N_NODELABEL_gpio1             DT_N_S_soc_S_gpio_S_gpio_3ff44800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_IDX_0_VAL_ADDRESS 1072973824 /* 0x3ff44800 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_COMPAT_MODEL_IDX_0 "esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg {1072973824 /* 0x3ff44800 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_0 1072973824
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_ngpios 8
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges {5 /* 0x5 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_IDX_0 5
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_IDX_1 2
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 0) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 1)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 1)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, gpio_reserved_ranges, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_LEN 2
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_gpio_reserved_ranges_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_gpio
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_GPIO
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_S_gpio_3ff44800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_PATH "/soc/i2c@3ff53000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME "i2c@3ff53000"
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME_UNQUOTED i2c@3ff53000
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME_TOKEN i2c_3ff53000
#define DT_N_S_soc_S_i2c_3ff53000_FULL_NAME_UPPER_TOKEN I2C_3FF53000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_CHILD_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_HASH cnp_xMDS0Fg2uIc1dlfnElYVgT6_vMamqb_fhqVTUBo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_ORD 101
#define DT_N_S_soc_S_i2c_3ff53000_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */ \
	11, /* /soc/gpio/gpio@3ff44000 */ \
	21, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_SUPPORTS_ORDS \
	102, /* /soc/i2c@3ff53000/max30102@57 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_EXISTS 1
#define DT_N_ALIAS_i2c_0                DT_N_S_soc_S_i2c_3ff53000
#define DT_N_INST_0_espressif_esp32_i2c DT_N_S_soc_S_i2c_3ff53000
#define DT_N_NODELABEL_i2c0             DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_VAL_ADDRESS 1073033216 /* 0x3ff53000 */
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_3ff53000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_MODEL_IDX_0 "esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff53000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_P_reg {1073033216 /* 0x3ff53000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_0 1073033216
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_pin 22
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_flags 6
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, pin) \
	fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, flags)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, pin) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, flags)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_IDX_0_NUM_CELLS 2
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_pin 21
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_flags 6
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, pin) \
	fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, flags)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, pin) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, flags)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_IDX_0_NUM_CELLS 2
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_tx_lsb 0
#define DT_N_S_soc_S_i2c_3ff53000_P_tx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_rx_lsb 0
#define DT_N_S_soc_S_i2c_3ff53000_P_rx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_3ff53000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sq_size 4
#define DT_N_S_soc_S_i2c_3ff53000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_cq_size 4
#define DT_N_S_soc_S_i2c_3ff53000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff53000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_3ff53000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_3ff53000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2c
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2c
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2C
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_label "I2C_0"
#define DT_N_S_soc_S_i2c_3ff53000_P_label_STRING_UNQUOTED I2C_0
#define DT_N_S_soc_S_i2c_3ff53000_P_label_STRING_TOKEN I2C_0
#define DT_N_S_soc_S_i2c_3ff53000_P_label_STRING_UPPER_TOKEN I2C_0
#define DT_N_S_soc_S_i2c_3ff53000_P_label_IDX_0 "I2C_0"
#define DT_N_S_soc_S_i2c_3ff53000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, label, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, label, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_label_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_VAL_offset 4
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0, offset)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0, offset)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff53000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff53000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000/max30102@57
 *
 * Node identifier: DT_N_S_soc_S_i2c_3ff53000_S_max30102_57
 *
 * Binding (compatible = maxim,max30102):
 *   /home/seatech/my-workspace/sniot_zephyr_template/dts/bindings/sensor/maxim,max30102.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_PATH "/soc/i2c@3ff53000/max30102@57"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FULL_NAME "max30102@57"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FULL_NAME_UNQUOTED max30102@57
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FULL_NAME_TOKEN max30102_57
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FULL_NAME_UPPER_TOKEN MAX30102_57

/* Node parent (/soc/i2c@3ff53000) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_PARENT DT_N_S_soc_S_i2c_3ff53000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_NODELABEL(fn) fn(max30102)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_NODELABEL_VARGS(fn, ...) fn(max30102, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_HASH S14lprH3DiM_dRAUdeadAoxejjfyV7g5NbakSmanYao

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_ORD 102
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_REQUIRES_ORDS \
	11, /* /soc/gpio/gpio@3ff44000 */ \
	101, /* /soc/i2c@3ff53000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_EXISTS 1
#define DT_N_INST_0_maxim_max30102 DT_N_S_soc_S_i2c_3ff53000_S_max30102_57
#define DT_N_NODELABEL_max30102    DT_N_S_soc_S_i2c_3ff53000_S_max30102_57

/* Bus info (controller: '/soc/i2c@3ff53000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_BUS_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_BUS DT_N_S_soc_S_i2c_3ff53000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_REG_IDX_0_VAL_ADDRESS 87 /* 0x57 */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_COMPAT_MATCHES_maxim_max30102 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_COMPAT_MODEL_IDX_0 "max30102"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_smp_ave 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_smp_ave_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_smp_ave_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_smp_ave_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_smp_ave_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_smp_ave_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_fifo_rollover_en 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_fifo_rollover_en_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_fifo_a_full 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_fifo_a_full_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_mode 3
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_mode_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_mode_IDX_0_ENUM_VAL_3_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_mode_ENUM_VAL_3_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_adc_rge 2
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_adc_rge_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_adc_rge_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_adc_rge_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_adc_rge_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_adc_rge_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_sr 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_sr_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_sr_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_sr_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_sr_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_sr_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_led1_pa 51
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_led1_pa_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_led2_pa 51
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_led2_pa_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_3ff44000
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_VAL_pin 9
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_VAL_flags 17
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0, pin) \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0, flags)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0, pin) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0, flags)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_IDX_0_NUM_CELLS 2
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, intb_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_intb_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_reg {87 /* 0x57 */}
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_reg_IDX_0 87
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, status, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible {"maxim,max30102"}
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_IDX_0 "maxim,max30102"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_IDX_0_STRING_UNQUOTED maxim,max30102
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_IDX_0_STRING_TOKEN maxim_max30102
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_MAX30102
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, compatible, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label "MAX30102"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_STRING_UNQUOTED MAX30102
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_STRING_TOKEN MAX30102
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_STRING_UPPER_TOKEN MAX30102
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_IDX_0 "MAX30102"
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, label, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, label, 0)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_3ff53000_S_max30102_57_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@3ff68000
 *
 * Node identifier: DT_N_S_soc_S_sdhc_3ff68000
 *
 * Binding (compatible = espressif,esp32-sdhc):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_3ff68000_PATH "/soc/sdhc@3ff68000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME "sdhc@3ff68000"
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME_UNQUOTED sdhc@3ff68000
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME_TOKEN sdhc_3ff68000
#define DT_N_S_soc_S_sdhc_3ff68000_FULL_NAME_UPPER_TOKEN SDHC_3FF68000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdhc_3ff68000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_3ff68000_CHILD_IDX 41

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_3ff68000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_NODELABEL(fn) fn(sdhc)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_3ff68000_CHILD_NUM 2
#define DT_N_S_soc_S_sdhc_3ff68000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sdhc_3ff68000_HASH j_fjdX120STK_n9WdWPe8ciwJubE2OYJD_gsOzNJnWg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_3ff68000_ORD 103
#define DT_N_S_soc_S_sdhc_3ff68000_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_3ff68000_REQUIRES_ORDS \
	4, /* /clock */ \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@3ff00104 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_3ff68000_SUPPORTS_ORDS \
	104, /* /soc/sdhc@3ff68000/sdhc@0 */ \
	105, /* /soc/sdhc@3ff68000/sdhc@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_3ff68000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_sdhc DT_N_S_soc_S_sdhc_3ff68000
#define DT_N_NODELABEL_sdhc              DT_N_S_soc_S_sdhc_3ff68000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_3ff68000_REG_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_REG_IDX_0_VAL_ADDRESS 1073119232 /* 0x3ff68000 */
#define DT_N_S_soc_S_sdhc_3ff68000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_sdhc_3ff68000_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_MATCHES_espressif_esp32_sdhc 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_COMPAT_MODEL_IDX_0 "esp32-sdhc"
#define DT_N_S_soc_S_sdhc_3ff68000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_3ff68000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg {1073119232 /* 0x3ff68000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_0 1073119232
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_sdhc_3ff68000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible {"espressif,esp32-sdhc"}
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0 "espressif,esp32-sdhc"
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_3ff00104
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_PH DT_N_S_clock
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_VAL_offset 20
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_FOREACH_CELL(fn) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0, offset)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_FOREACH_CELL_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0, offset)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_IDX_0_NUM_CELLS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_3ff68000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@3ff68000/sdhc@0
 *
 * Node identifier: DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0
 *
 * Binding (compatible = espressif,esp32-sdhc-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_PATH "/soc/sdhc@3ff68000/sdhc@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME "sdhc@0"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME_UNQUOTED sdhc@0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME_TOKEN sdhc_0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FULL_NAME_UPPER_TOKEN SDHC_0

/* Node parent (/soc/sdhc@3ff68000) identifier: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_PARENT DT_N_S_soc_S_sdhc_3ff68000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_NODELABEL(fn) fn(sdhc0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_CHILD_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_HASH nRVf6Mr7L_e9PJlUO2Tpaf7qVOT5UFHve8_pHN_aRC0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_ORD 104
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REQUIRES_ORDS \
	103, /* /soc/sdhc@3ff68000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_EXISTS 1
#define DT_N_INST_0_espressif_esp32_sdhc_slot DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0
#define DT_N_NODELABEL_sdhc0                  DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REG_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_IRQ_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_MATCHES_espressif_esp32_sdhc_slot 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_COMPAT_MODEL_IDX_0 "esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width 4
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_330 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_300 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_180 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_min_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_power_delay_ms 500
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_status_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible {"espressif,esp32-sdhc-slot"}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0 "espressif,esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc-slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc_slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC_SLOT
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@3ff68000/sdhc@1
 *
 * Node identifier: DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1
 *
 * Binding (compatible = espressif,esp32-sdhc-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_PATH "/soc/sdhc@3ff68000/sdhc@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME "sdhc@1"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME_UNQUOTED sdhc@1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME_TOKEN sdhc_1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FULL_NAME_UPPER_TOKEN SDHC_1

/* Node parent (/soc/sdhc@3ff68000) identifier: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_PARENT DT_N_S_soc_S_sdhc_3ff68000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_NODELABEL(fn) fn(sdhc1)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_CHILD_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_HASH SaAqgBDCup1fjThb6lC9xIACx_sNjTUfpw_VokcV7yg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_ORD 105
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REQUIRES_ORDS \
	103, /* /soc/sdhc@3ff68000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_EXISTS 1
#define DT_N_INST_1_espressif_esp32_sdhc_slot DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1
#define DT_N_NODELABEL_sdhc1                  DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REG_NUM 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_IRQ_NUM 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_IRQ_LEVEL 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_MATCHES_espressif_esp32_sdhc_slot 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_COMPAT_MODEL_IDX_0 "esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width 4
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_330 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_300 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_180 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_min_bus_freq 400000
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_power_delay_ms 500
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_status_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible {"espressif,esp32-sdhc-slot"}
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0 "espressif,esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc-slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc_slot
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC_SLOT
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_canbus                  DT_N_S_soc_S_can_3ff6b000
#define DT_CHOSEN_zephyr_canbus_EXISTS           1
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_trng_3ff75144
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_3ff42000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_3ffe0000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_3ff40000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_3ff40000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_bt_hci                  DT_N_S_esp32_bt_hci
#define DT_CHOSEN_zephyr_bt_hci_EXISTS           1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_ipm_3ffe9630) fn(DT_N_S_soc_S_mbox_3ffe9638) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_rtc_timer_3ff48004) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_uart_3ff50000) fn(DT_N_S_soc_S_uart_3ff6e000) fn(DT_N_S_soc_S_pcnt_3ff57000) fn(DT_N_S_soc_S_ledc_3ff59000) fn(DT_N_S_soc_S_mcpwm_3ff5e000) fn(DT_N_S_soc_S_mcpwm_3ff6c000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800) fn(DT_N_S_soc_S_touch_3ff48858) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57) fn(DT_N_S_soc_S_i2c_3ff67000) fn(DT_N_S_soc_S_i2s_3ff4f000) fn(DT_N_S_soc_S_i2s_3ff6d000) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_watchdog_3ff60048) fn(DT_N_S_soc_S_spi_3ff64000) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_can_3ff6b000) fn(DT_N_S_soc_S_counter_3ff5f000) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter) fn(DT_N_S_soc_S_counter_3ff5f024) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter) fn(DT_N_S_soc_S_counter_3ff60000) fn(DT_N_S_soc_S_counter_3ff60000_S_counter) fn(DT_N_S_soc_S_counter_3ff60024) fn(DT_N_S_soc_S_counter_3ff60024_S_counter) fn(DT_N_S_soc_S_dac_3ff48800) fn(DT_N_S_soc_S_adc_3ff48800) fn(DT_N_S_soc_S_adc_3ff48890) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1) fn(DT_N_S_soc_S_sha_3ff03000) fn(DT_N_S_soc_S_aes_3ff01000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_eth) fn(DT_N_S_mdio) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2) fn(DT_N_S_pin_controller_S_uart2_default) fn(DT_N_S_pin_controller_S_uart2_default_S_group1) fn(DT_N_S_pin_controller_S_uart2_default_S_group2) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s1_default) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) fn(DT_N_S_clock) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630) fn(DT_N_S_soc_S_interrupt_controller_3ff00104) fn(DT_N_S_soc_S_flash_controller_3ff42000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_spi_3ff64000) fn(DT_N_S_soc_S_spi_3ff65000) fn(DT_N_S_soc_S_sdhc_3ff68000) fn(DT_N_S_soc_S_sha_3ff03000) fn(DT_N_S_soc_S_aes_3ff01000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2) fn(DT_N_S_pin_controller_S_uart2_default) fn(DT_N_S_pin_controller_S_uart2_default_S_group1) fn(DT_N_S_pin_controller_S_uart2_default_S_group2) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s1_default) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) fn(DT_N_S_clock) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_ipm_3ffe9630, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_3ffe9638, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_3ff48004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff50000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff6e000, __VA_ARGS__) fn(DT_N_S_soc_S_pcnt_3ff57000, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_3ff59000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff5e000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_3ff6c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__) fn(DT_N_S_soc_S_touch_3ff48858, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff67000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_3ff4f000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_3ff6d000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff60048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_can_3ff6b000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff5f024_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_3ff60024_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_dac_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_3ff48890, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_0, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000_S_sdhc_1, __VA_ARGS__) fn(DT_N_S_soc_S_sha_3ff03000, __VA_ARGS__) fn(DT_N_S_soc_S_aes_3ff01000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_eth, __VA_ARGS__) fn(DT_N_S_mdio, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) fn(DT_N_S_clock, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, __VA_ARGS__) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__) fn(DT_N_S_soc_S_sha_3ff03000, __VA_ARGS__) fn(DT_N_S_soc_S_aes_3ff01000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart2_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) fn(DT_N_S_clock, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_1000
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_sys DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_10000
#define DT_COMPAT_fixed_partitions_LABEL_sys_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_20000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_170000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0_appcpu DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_2c0000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_appcpu_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1_appcpu DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_330000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_appcpu_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0_lpcore DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a0000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_lpcore_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1_lpcore DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3a8000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_lpcore_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3b0000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3e0000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_coredump DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions_S_partition_3ff000
#define DT_COMPAT_fixed_partitions_LABEL_coredump_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_espressif_esp32 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_psram 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_intc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_espressif_crosscore_interrupt 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_uart 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_gpio 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_i2c 1
#define DT_COMPAT_HAS_OKAY_maxim_max30102 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_trng 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_watchdog 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_spi 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_sdhc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_sha 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_aes 1
#define DT_COMPAT_HAS_OKAY_espressif_xtensa_lx6 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_wifi 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_bt_hci 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_clock 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_espressif_esp32_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 2
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 6
#define DT_N_INST_mmio_sram_NUM_OKAY 8
#define DT_N_INST_espressif_esp32_psram_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_intc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_espressif_crosscore_interrupt_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_uart_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_gpio_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_i2c_NUM_OKAY 1
#define DT_N_INST_maxim_max30102_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_trng_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_watchdog_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_spi_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_sdhc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_sha_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_aes_NUM_OKAY 1
#define DT_N_INST_espressif_xtensa_lx6_NUM_OKAY 2
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_wifi_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_bt_hci_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_pinctrl_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_clock_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_espressif_esp32(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc) fn(DT_N_S_soc_S_gpio)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_40070000) fn(DT_N_S_soc_S_memory_3ffe0000) fn(DT_N_S_soc_S_memory_3ffae000) fn(DT_N_S_soc_S_dcache0_3f400000) fn(DT_N_S_soc_S_dcache1_3f800000) fn(DT_N_S_soc_S_icache0_400d0000) fn(DT_N_S_soc_S_memory_3ffe5230) fn(DT_N_S_soc_S_memory_3ffe5630)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffae000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache0_3f400000, __VA_ARGS__) fn(DT_N_S_soc_S_dcache1_3f800000, __VA_ARGS__) fn(DT_N_S_soc_S_icache0_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5230, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3ffe5630, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_psram(fn) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_psram(fn, ...) fn(DT_N_S_soc_S_dcache1_3f800000_S_psram0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_psram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_psram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_intc(fn) fn(DT_N_S_soc_S_interrupt_controller_3ff00104)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_intc(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_3ff00104, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_intc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_intc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_3ff42000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_crosscore_interrupt(fn) fn(DT_N_S_soc_S_ipi_3f4c0058) fn(DT_N_S_soc_S_ipi_3f4c005c)
#define DT_FOREACH_OKAY_VARGS_espressif_crosscore_interrupt(fn, ...) fn(DT_N_S_soc_S_ipi_3f4c0058, __VA_ARGS__) fn(DT_N_S_soc_S_ipi_3f4c005c, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_crosscore_interrupt(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_crosscore_interrupt(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_uart(fn) fn(DT_N_S_soc_S_uart_3ff40000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_uart(fn, ...) fn(DT_N_S_soc_S_uart_3ff40000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_gpio(fn) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_3ff44800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_i2c(fn) fn(DT_N_S_soc_S_i2c_3ff53000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_maxim_max30102(fn) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57)
#define DT_FOREACH_OKAY_VARGS_maxim_max30102(fn, ...) fn(DT_N_S_soc_S_i2c_3ff53000_S_max30102_57, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_maxim_max30102(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_maxim_max30102(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_trng(fn) fn(DT_N_S_soc_S_trng_3ff75144)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_trng(fn, ...) fn(DT_N_S_soc_S_trng_3ff75144, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_3ff5f048)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_3ff5f048, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_spi(fn) fn(DT_N_S_soc_S_spi_3ff64000) fn(DT_N_S_soc_S_spi_3ff65000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_spi(fn, ...) fn(DT_N_S_soc_S_spi_3ff64000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_3ff65000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_spi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_spi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_sdhc(fn) fn(DT_N_S_soc_S_sdhc_3ff68000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_sdhc(fn, ...) fn(DT_N_S_soc_S_sdhc_3ff68000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_sdhc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_sdhc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_sha(fn) fn(DT_N_S_soc_S_sha_3ff03000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_sha(fn, ...) fn(DT_N_S_soc_S_sha_3ff03000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_sha(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_sha(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_aes(fn) fn(DT_N_S_soc_S_aes_3ff01000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_aes(fn, ...) fn(DT_N_S_soc_S_aes_3ff01000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_aes(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_aes(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_xtensa_lx6(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_espressif_xtensa_lx6(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_xtensa_lx6(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_xtensa_lx6(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_wifi(fn) fn(DT_N_S_wifi)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_wifi(fn, ...) fn(DT_N_S_wifi, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_wifi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_wifi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_bt_hci(fn) fn(DT_N_S_esp32_bt_hci)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_bt_hci(fn, ...) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_bt_hci(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_bt_hci(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_clock(fn) fn(DT_N_S_clock)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_clock(fn, ...) fn(DT_N_S_clock, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_maxim_max30102_BUS_i2c 1
